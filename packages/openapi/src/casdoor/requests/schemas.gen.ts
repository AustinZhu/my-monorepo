// This file is auto-generated by @hey-api/openapi-ts

export const $casbin_Enforcer = {
    title: 'Enforcer',
    type: 'object'
} as const;

export const $controllers_AuthForm = {
    title: 'AuthForm',
    type: 'object'
} as const;

export const $controllers_EmailForm = {
    title: 'EmailForm',
    type: 'object',
    properties: {
        content: {
            type: 'string'
        },
        provider: {
            type: 'string'
        },
        receivers: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        sender: {
            type: 'string'
        },
        title: {
            type: 'string'
        }
    }
} as const;

export const $controllers_LaravelResponse = {
    title: 'LaravelResponse',
    type: 'object',
    properties: {
        created_at: {
            type: 'string'
        },
        email: {
            type: 'string'
        },
        email_verified_at: {
            type: 'string'
        },
        id: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        updated_at: {
            type: 'string'
        }
    }
} as const;

export const $controllers_LdapResp = {
    title: 'LdapResp',
    type: 'object',
    properties: {
        existUuids: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        users: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.LdapUser'
            }
        }
    }
} as const;

export const $controllers_LdapSyncResp = {
    title: 'LdapSyncResp',
    type: 'object',
    properties: {
        exist: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.LdapUser'
            }
        },
        failed: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.LdapUser'
            }
        }
    }
} as const;

export const $controllers_NotificationForm = {
    title: 'NotificationForm',
    type: 'object',
    properties: {
        content: {
            type: 'string'
        }
    }
} as const;

export const $controllers_Response = {
    title: 'Response',
    type: 'object',
    properties: {
        data: {
            additionalProperties: {
                description: 'support string, struct or []struct',
                type: 'string'
            }
        },
        data2: {
            additionalProperties: {
                description: 'support string, struct or []struct',
                type: 'string'
            }
        },
        msg: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        status: {
            type: 'string'
        },
        sub: {
            type: 'string'
        }
    }
} as const;

export const $controllers_SmsForm = {
    title: 'SmsForm',
    type: 'object',
    properties: {
        content: {
            type: 'string'
        },
        organizationId: {
            type: 'string'
        },
        receivers: {
            type: 'array',
            items: {
                type: 'string'
            }
        }
    }
} as const;

export const $jose_JSONWebKey = {
    title: 'JSONWebKey',
    type: 'object'
} as const;

export const $model_Model = {
    title: 'Model',
    type: 'object'
} as const;

export const $object = {
    title: 'object',
    type: 'object'
} as const;

export const $object_AccountItem = {
    title: 'AccountItem',
    type: 'object',
    properties: {
        modifyRule: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        viewRule: {
            type: 'string'
        },
        visible: {
            type: 'boolean'
        }
    }
} as const;

export const $object_Adapter = {
    title: 'Adapter',
    type: 'object',
    properties: {
        createdTime: {
            type: 'string'
        },
        database: {
            type: 'string'
        },
        databaseType: {
            type: 'string'
        },
        host: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        password: {
            type: 'string'
        },
        port: {
            type: 'integer',
            format: 'int64'
        },
        table: {
            type: 'string'
        },
        type: {
            type: 'string'
        },
        useSameDb: {
            type: 'boolean'
        },
        user: {
            type: 'string'
        }
    }
} as const;

export const $object_Application = {
    title: 'Application',
    type: 'object',
    properties: {
        affiliationUrl: {
            type: 'string'
        },
        cert: {
            type: 'string'
        },
        certPublicKey: {
            type: 'string'
        },
        clientId: {
            type: 'string'
        },
        clientSecret: {
            type: 'string'
        },
        createdTime: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        enableAutoSignin: {
            type: 'boolean'
        },
        enableCodeSignin: {
            type: 'boolean'
        },
        enableLinkWithEmail: {
            type: 'boolean'
        },
        enablePassword: {
            type: 'boolean'
        },
        enableSamlC14n10: {
            type: 'boolean'
        },
        enableSamlCompress: {
            type: 'boolean'
        },
        enableSamlPostBinding: {
            type: 'boolean'
        },
        enableSignUp: {
            type: 'boolean'
        },
        enableSigninSession: {
            type: 'boolean'
        },
        enableWebAuthn: {
            type: 'boolean'
        },
        expireInHours: {
            type: 'integer',
            format: 'int64'
        },
        failedSigninFrozenTime: {
            type: 'integer',
            format: 'int64'
        },
        failedSigninLimit: {
            type: 'integer',
            format: 'int64'
        },
        forgetUrl: {
            type: 'string'
        },
        formBackgroundUrl: {
            type: 'string'
        },
        formCss: {
            type: 'string'
        },
        formCssMobile: {
            type: 'string'
        },
        formOffset: {
            type: 'integer',
            format: 'int64'
        },
        formSideHtml: {
            type: 'string'
        },
        grantTypes: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        homepageUrl: {
            type: 'string'
        },
        invitationCodes: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        logo: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        orgChoiceMode: {
            type: 'string'
        },
        organization: {
            type: 'string'
        },
        organizationObj: {
            '$ref': '#/definitions/object.Organization'
        },
        owner: {
            type: 'string'
        },
        providers: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.ProviderItem'
            }
        },
        redirectUris: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        refreshExpireInHours: {
            type: 'integer',
            format: 'int64'
        },
        samlAttributes: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.SamlItem'
            }
        },
        samlReplyUrl: {
            type: 'string'
        },
        signinHtml: {
            type: 'string'
        },
        signinMethods: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.SigninMethod'
            }
        },
        signinUrl: {
            type: 'string'
        },
        signupHtml: {
            type: 'string'
        },
        signupItems: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.SignupItem'
            }
        },
        signupUrl: {
            type: 'string'
        },
        tags: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        termsOfUse: {
            type: 'string'
        },
        themeData: {
            '$ref': '#/definitions/object.ThemeData'
        },
        tokenFields: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        tokenFormat: {
            type: 'string'
        }
    }
} as const;

export const $object_Cert = {
    title: 'Cert',
    type: 'object',
    properties: {
        bitSize: {
            type: 'integer',
            format: 'int64'
        },
        certificate: {
            type: 'string'
        },
        createdTime: {
            type: 'string'
        },
        cryptoAlgorithm: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        expireInYears: {
            type: 'integer',
            format: 'int64'
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        privateKey: {
            type: 'string'
        },
        scope: {
            type: 'string'
        },
        type: {
            type: 'string'
        }
    }
} as const;

export const $object_Enforcer = {
    title: 'Enforcer',
    type: 'object',
    properties: {
        adapter: {
            type: 'string'
        },
        createdTime: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        model: {
            type: 'string'
        },
        modelCfg: {
            additionalProperties: {
                type: 'string'
            }
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        updatedTime: {
            type: 'string'
        }
    }
} as const;

export const $object_GaugeVecInfo = {
    title: 'GaugeVecInfo',
    type: 'object',
    properties: {
        method: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        throughput: {
            type: 'number',
            format: 'double'
        }
    }
} as const;

export const $object_Group = {
    title: 'Group',
    type: 'object',
    properties: {
        children: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.Group'
            }
        },
        contactEmail: {
            type: 'string'
        },
        createdTime: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        isEnabled: {
            type: 'boolean'
        },
        isTopGroup: {
            type: 'boolean'
        },
        key: {
            type: 'string'
        },
        manager: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        parentId: {
            type: 'string'
        },
        title: {
            type: 'string'
        },
        type: {
            type: 'string'
        },
        updatedTime: {
            type: 'string'
        },
        users: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.User'
            }
        }
    }
} as const;

export const $object_Header = {
    title: 'Header',
    type: 'object',
    properties: {
        name: {
            type: 'string'
        },
        value: {
            type: 'string'
        }
    }
} as const;

export const $object_HistogramVecInfo = {
    title: 'HistogramVecInfo',
    type: 'object',
    properties: {
        count: {
            type: 'integer',
            format: 'int64'
        },
        latency: {
            type: 'string'
        },
        method: {
            type: 'string'
        },
        name: {
            type: 'string'
        }
    }
} as const;

export const $object_IntrospectionResponse = {
    title: 'IntrospectionResponse',
    type: 'object',
    properties: {
        active: {
            type: 'boolean'
        },
        aud: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        client_id: {
            type: 'string'
        },
        exp: {
            type: 'integer',
            format: 'int64'
        },
        iat: {
            type: 'integer',
            format: 'int64'
        },
        iss: {
            type: 'string'
        },
        jti: {
            type: 'string'
        },
        nbf: {
            type: 'integer',
            format: 'int64'
        },
        scope: {
            type: 'string'
        },
        sub: {
            type: 'string'
        },
        token_type: {
            type: 'string'
        },
        username: {
            type: 'string'
        }
    }
} as const;

export const $object_Invitation = {
    title: 'Invitation',
    type: 'object',
    properties: {
        application: {
            type: 'string'
        },
        code: {
            type: 'string'
        },
        createdTime: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        email: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        phone: {
            type: 'string'
        },
        quota: {
            type: 'integer',
            format: 'int64'
        },
        signupGroup: {
            type: 'string'
        },
        state: {
            type: 'string'
        },
        updatedTime: {
            type: 'string'
        },
        usedCount: {
            type: 'integer',
            format: 'int64'
        },
        username: {
            type: 'string'
        }
    }
} as const;

export const $object_Ldap = {
    title: 'Ldap',
    type: 'object',
    properties: {
        autoSync: {
            type: 'integer',
            format: 'int64'
        },
        baseDn: {
            type: 'string'
        },
        createdTime: {
            type: 'string'
        },
        enableSsl: {
            type: 'boolean'
        },
        filter: {
            type: 'string'
        },
        filterFields: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        host: {
            type: 'string'
        },
        id: {
            type: 'string'
        },
        lastSync: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        password: {
            type: 'string'
        },
        port: {
            type: 'integer',
            format: 'int64'
        },
        serverName: {
            type: 'string'
        },
        username: {
            type: 'string'
        }
    }
} as const;

export const $object_LdapUser = {
    title: 'LdapUser',
    type: 'object',
    properties: {
        EmailAddress: {
            type: 'string'
        },
        Mail: {
            type: 'string'
        },
        MobileTelephoneNumber: {
            type: 'string'
        },
        PostalAddress: {
            type: 'string'
        },
        RegisteredAddress: {
            type: 'string'
        },
        TelephoneNumber: {
            type: 'string'
        },
        address: {
            type: 'string'
        },
        cn: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        email: {
            type: 'string'
        },
        gidNumber: {
            type: 'string'
        },
        groupId: {
            type: 'string'
        },
        memberOf: {
            type: 'string'
        },
        mobile: {
            type: 'string'
        },
        uid: {
            type: 'string'
        },
        uidNumber: {
            type: 'string'
        },
        userPrincipalName: {
            type: 'string'
        },
        uuid: {
            type: 'string'
        }
    }
} as const;

export const $object_ManagedAccount = {
    title: 'ManagedAccount',
    type: 'object',
    properties: {
        application: {
            type: 'string'
        },
        password: {
            type: 'string'
        },
        signinUrl: {
            type: 'string'
        },
        username: {
            type: 'string'
        }
    }
} as const;

export const $object_MfaItem = {
    title: 'MfaItem',
    type: 'object',
    properties: {
        name: {
            type: 'string'
        },
        rule: {
            type: 'string'
        }
    }
} as const;

export const $object_MfaProps = {
    title: 'MfaProps',
    type: 'object',
    properties: {
        countryCode: {
            type: 'string'
        },
        enabled: {
            type: 'boolean'
        },
        isPreferred: {
            type: 'boolean'
        },
        mfaType: {
            type: 'string'
        },
        recoveryCodes: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        secret: {
            type: 'string'
        },
        url: {
            type: 'string'
        }
    }
} as const;

export const $object_Model = {
    title: 'Model',
    type: 'object',
    properties: {
        createdTime: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        modelText: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        }
    }
} as const;

export const $object_OidcDiscovery = {
    title: 'OidcDiscovery',
    type: 'object',
    properties: {
        authorization_endpoint: {
            type: 'string'
        },
        claims_supported: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        end_session_endpoint: {
            type: 'string'
        },
        grant_types_supported: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        id_token_signing_alg_values_supported: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        introspection_endpoint: {
            type: 'string'
        },
        issuer: {
            type: 'string'
        },
        jwks_uri: {
            type: 'string'
        },
        request_object_signing_alg_values_supported: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        request_parameter_supported: {
            type: 'boolean'
        },
        response_modes_supported: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        response_types_supported: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        scopes_supported: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        subject_types_supported: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        token_endpoint: {
            type: 'string'
        },
        userinfo_endpoint: {
            type: 'string'
        }
    }
} as const;

export const $object_Organization = {
    title: 'Organization',
    type: 'object',
    properties: {
        accountItems: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.AccountItem'
            }
        },
        countryCodes: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        createdTime: {
            type: 'string'
        },
        defaultApplication: {
            type: 'string'
        },
        defaultAvatar: {
            type: 'string'
        },
        defaultPassword: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        enableSoftDeletion: {
            type: 'boolean'
        },
        favicon: {
            type: 'string'
        },
        initScore: {
            type: 'integer',
            format: 'int64'
        },
        isProfilePublic: {
            type: 'boolean'
        },
        languages: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        masterPassword: {
            type: 'string'
        },
        masterVerificationCode: {
            type: 'string'
        },
        mfaItems: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.MfaItem'
            }
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        passwordOptions: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        passwordSalt: {
            type: 'string'
        },
        passwordType: {
            type: 'string'
        },
        tags: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        themeData: {
            '$ref': '#/definitions/object.ThemeData'
        },
        websiteUrl: {
            type: 'string'
        }
    }
} as const;

export const $object_Ormer = {
    title: 'Ormer',
    type: 'object',
    properties: {
        Engine: {
            '$ref': '#/definitions/xorm.Engine'
        },
        dataSourceName: {
            type: 'string'
        },
        dbName: {
            type: 'string'
        },
        driverName: {
            type: 'string'
        }
    }
} as const;

export const $object_Payment = {
    title: 'Payment',
    type: 'object',
    properties: {
        createdTime: {
            type: 'string'
        },
        currency: {
            type: 'string'
        },
        detail: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        invoiceRemark: {
            type: 'string'
        },
        invoiceTaxId: {
            type: 'string'
        },
        invoiceTitle: {
            type: 'string'
        },
        invoiceType: {
            type: 'string'
        },
        invoiceUrl: {
            type: 'string'
        },
        message: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        outOrderId: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        payUrl: {
            type: 'string'
        },
        personEmail: {
            type: 'string'
        },
        personIdCard: {
            type: 'string'
        },
        personName: {
            type: 'string'
        },
        personPhone: {
            type: 'string'
        },
        price: {
            type: 'number',
            format: 'double'
        },
        productDisplayName: {
            type: 'string'
        },
        productName: {
            type: 'string'
        },
        provider: {
            type: 'string'
        },
        returnUrl: {
            type: 'string'
        },
        state: {
            '$ref': '#/definitions/pp.PaymentState'
        },
        successUrl: {
            type: 'string'
        },
        tag: {
            type: 'string'
        },
        type: {
            type: 'string'
        },
        user: {
            type: 'string'
        }
    }
} as const;

export const $object_Permission = {
    title: 'Permission',
    type: 'object',
    properties: {
        actions: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        adapter: {
            type: 'string'
        },
        approveTime: {
            type: 'string'
        },
        approver: {
            type: 'string'
        },
        createdTime: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        domains: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        effect: {
            type: 'string'
        },
        groups: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        isEnabled: {
            type: 'boolean'
        },
        model: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        resourceType: {
            type: 'string'
        },
        resources: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        roles: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        state: {
            type: 'string'
        },
        submitter: {
            type: 'string'
        },
        users: {
            type: 'array',
            items: {
                type: 'string'
            }
        }
    }
} as const;

export const $object_Plan = {
    title: 'Plan',
    type: 'object',
    properties: {
        createdTime: {
            type: 'string'
        },
        currency: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        isEnabled: {
            type: 'boolean'
        },
        name: {
            type: 'string'
        },
        options: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        owner: {
            type: 'string'
        },
        paymentProviders: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        period: {
            type: 'string'
        },
        price: {
            type: 'number',
            format: 'double'
        },
        product: {
            type: 'string'
        },
        role: {
            type: 'string'
        }
    }
} as const;

export const $object_Pricing = {
    title: 'Pricing',
    type: 'object',
    properties: {
        application: {
            type: 'string'
        },
        createdTime: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        isEnabled: {
            type: 'boolean'
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        plans: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        trialDuration: {
            type: 'integer',
            format: 'int64'
        }
    }
} as const;

export const $object_Product = {
    title: 'Product',
    type: 'object',
    properties: {
        createdTime: {
            type: 'string'
        },
        currency: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        detail: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        image: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        price: {
            type: 'number',
            format: 'double'
        },
        providerObjs: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.Provider'
            }
        },
        providers: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        quantity: {
            type: 'integer',
            format: 'int64'
        },
        returnUrl: {
            type: 'string'
        },
        sold: {
            type: 'integer',
            format: 'int64'
        },
        state: {
            type: 'string'
        },
        tag: {
            type: 'string'
        }
    }
} as const;

export const $object_PrometheusInfo = {
    title: 'PrometheusInfo',
    type: 'object',
    properties: {
        apiLatency: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.HistogramVecInfo'
            }
        },
        apiThroughput: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.GaugeVecInfo'
            }
        },
        totalThroughput: {
            type: 'number',
            format: 'double'
        }
    }
} as const;

export const $object_Provider = {
    title: 'Provider',
    type: 'object',
    properties: {
        appId: {
            type: 'string'
        },
        bucket: {
            type: 'string'
        },
        category: {
            type: 'string'
        },
        cert: {
            type: 'string'
        },
        clientId: {
            type: 'string'
        },
        clientId2: {
            type: 'string'
        },
        clientSecret: {
            type: 'string'
        },
        clientSecret2: {
            type: 'string'
        },
        content: {
            type: 'string'
        },
        createdTime: {
            type: 'string'
        },
        customAuthUrl: {
            type: 'string'
        },
        customLogo: {
            type: 'string'
        },
        customTokenUrl: {
            type: 'string'
        },
        customUserInfoUrl: {
            type: 'string'
        },
        disableSsl: {
            type: 'boolean'
        },
        displayName: {
            type: 'string'
        },
        domain: {
            type: 'string'
        },
        enableSignAuthnRequest: {
            type: 'boolean'
        },
        endpoint: {
            type: 'string'
        },
        host: {
            type: 'string'
        },
        idP: {
            type: 'string'
        },
        intranetEndpoint: {
            type: 'string'
        },
        issuerUrl: {
            type: 'string'
        },
        metadata: {
            type: 'string'
        },
        method: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        pathPrefix: {
            type: 'string'
        },
        port: {
            type: 'integer',
            format: 'int64'
        },
        providerUrl: {
            type: 'string'
        },
        receiver: {
            type: 'string'
        },
        regionId: {
            type: 'string'
        },
        scopes: {
            type: 'string'
        },
        signName: {
            type: 'string'
        },
        subType: {
            type: 'string'
        },
        templateCode: {
            type: 'string'
        },
        title: {
            type: 'string'
        },
        type: {
            type: 'string'
        },
        userMapping: {
            additionalProperties: {
                type: 'string'
            }
        }
    }
} as const;

export const $object_ProviderItem = {
    title: 'ProviderItem',
    type: 'object',
    properties: {
        canSignIn: {
            type: 'boolean'
        },
        canSignUp: {
            type: 'boolean'
        },
        canUnlink: {
            type: 'boolean'
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        prompted: {
            type: 'boolean'
        },
        provider: {
            '$ref': '#/definitions/object.Provider'
        },
        rule: {
            type: 'string'
        },
        signupGroup: {
            type: 'string'
        }
    }
} as const;

export const $object_Resource = {
    title: 'Resource',
    type: 'object',
    properties: {
        application: {
            type: 'string'
        },
        createdTime: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        fileFormat: {
            type: 'string'
        },
        fileName: {
            type: 'string'
        },
        fileSize: {
            type: 'integer',
            format: 'int64'
        },
        fileType: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        parent: {
            type: 'string'
        },
        provider: {
            type: 'string'
        },
        tag: {
            type: 'string'
        },
        url: {
            type: 'string'
        },
        user: {
            type: 'string'
        }
    }
} as const;

export const $object_Role = {
    title: 'Role',
    type: 'object',
    properties: {
        createdTime: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        domains: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        groups: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        isEnabled: {
            type: 'boolean'
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        roles: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        users: {
            type: 'array',
            items: {
                type: 'string'
            }
        }
    }
} as const;

export const $object_SamlItem = {
    title: 'SamlItem',
    type: 'object',
    properties: {
        name: {
            type: 'string'
        },
        nameFormat: {
            type: 'string'
        },
        value: {
            type: 'string'
        }
    }
} as const;

export const $object_SigninMethod = {
    title: 'SigninMethod',
    type: 'object',
    properties: {
        displayName: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        rule: {
            type: 'string'
        }
    }
} as const;

export const $object_SignupItem = {
    title: 'SignupItem',
    type: 'object',
    properties: {
        label: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        placeholder: {
            type: 'string'
        },
        prompted: {
            type: 'boolean'
        },
        regex: {
            type: 'string'
        },
        required: {
            type: 'boolean'
        },
        rule: {
            type: 'string'
        },
        visible: {
            type: 'boolean'
        }
    }
} as const;

export const $object_Subscription = {
    title: 'Subscription',
    type: 'object',
    properties: {
        createdTime: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        endTime: {
            type: 'string',
            format: 'datetime'
        },
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        payment: {
            type: 'string'
        },
        period: {
            type: 'string'
        },
        plan: {
            type: 'string'
        },
        pricing: {
            type: 'string'
        },
        startTime: {
            type: 'string',
            format: 'datetime'
        },
        state: {
            '$ref': '#/definitions/object.SubscriptionState'
        },
        user: {
            type: 'string'
        }
    }
} as const;

export const $object_SubscriptionState = {
    title: 'SubscriptionState',
    type: 'string',
    enum: ['SubStatePending = "Pending"', 'SubStateError = "Error"', 'SubStateSuspended = "Suspended"', 'SubStateActive = "Active"', 'SubStateUpcoming = "Upcoming"', 'SubStateExpired = "Expired"'],
    example: 'Pending'
} as const;

export const $object_Syncer = {
    title: 'Syncer',
    type: 'object',
    properties: {
        affiliationTable: {
            type: 'string'
        },
        avatarBaseUrl: {
            type: 'string'
        },
        createdTime: {
            type: 'string'
        },
        database: {
            type: 'string'
        },
        databaseType: {
            type: 'string'
        },
        errorText: {
            type: 'string'
        },
        host: {
            type: 'string'
        },
        isEnabled: {
            type: 'boolean'
        },
        isReadOnly: {
            type: 'boolean'
        },
        name: {
            type: 'string'
        },
        organization: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        password: {
            type: 'string'
        },
        port: {
            type: 'integer',
            format: 'int64'
        },
        sslMode: {
            type: 'string'
        },
        syncInterval: {
            type: 'integer',
            format: 'int64'
        },
        table: {
            type: 'string'
        },
        tableColumns: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.TableColumn'
            }
        },
        type: {
            type: 'string'
        },
        user: {
            type: 'string'
        }
    }
} as const;

export const $object_TableColumn = {
    title: 'TableColumn',
    type: 'object',
    properties: {
        casdoorName: {
            type: 'string'
        },
        isHashed: {
            type: 'boolean'
        },
        isKey: {
            type: 'boolean'
        },
        name: {
            type: 'string'
        },
        type: {
            type: 'string'
        },
        values: {
            type: 'array',
            items: {
                type: 'string'
            }
        }
    }
} as const;

export const $object_ThemeData = {
    title: 'ThemeData',
    type: 'object',
    properties: {
        borderRadius: {
            type: 'integer',
            format: 'int64'
        },
        colorPrimary: {
            type: 'string'
        },
        isCompact: {
            type: 'boolean'
        },
        isEnabled: {
            type: 'boolean'
        },
        themeType: {
            type: 'string'
        }
    }
} as const;

export const $object_Token = {
    title: 'Token',
    type: 'object',
    properties: {
        accessToken: {
            type: 'string'
        },
        accessTokenHash: {
            type: 'string'
        },
        application: {
            type: 'string'
        },
        code: {
            type: 'string'
        },
        codeChallenge: {
            type: 'string'
        },
        codeExpireIn: {
            type: 'integer',
            format: 'int64'
        },
        codeIsUsed: {
            type: 'boolean'
        },
        createdTime: {
            type: 'string'
        },
        expiresIn: {
            type: 'integer',
            format: 'int64'
        },
        name: {
            type: 'string'
        },
        organization: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        refreshToken: {
            type: 'string'
        },
        refreshTokenHash: {
            type: 'string'
        },
        scope: {
            type: 'string'
        },
        tokenType: {
            type: 'string'
        },
        user: {
            type: 'string'
        }
    }
} as const;

export const $object_TokenError = {
    title: 'TokenError',
    type: 'object',
    properties: {
        error: {
            type: 'string'
        },
        error_description: {
            type: 'string'
        }
    }
} as const;

export const $object_TokenWrapper = {
    title: 'TokenWrapper',
    type: 'object',
    properties: {
        access_token: {
            type: 'string'
        },
        expires_in: {
            type: 'integer',
            format: 'int64'
        },
        id_token: {
            type: 'string'
        },
        refresh_token: {
            type: 'string'
        },
        scope: {
            type: 'string'
        },
        token_type: {
            type: 'string'
        }
    }
} as const;

export const $object_User = {
    title: 'User',
    type: 'object',
    properties: {
        accessKey: {
            type: 'string'
        },
        accessSecret: {
            type: 'string'
        },
        address: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        adfs: {
            type: 'string'
        },
        affiliation: {
            type: 'string'
        },
        alipay: {
            type: 'string'
        },
        amazon: {
            type: 'string'
        },
        apple: {
            type: 'string'
        },
        auth0: {
            type: 'string'
        },
        avatar: {
            type: 'string'
        },
        avatarType: {
            type: 'string'
        },
        azuread: {
            type: 'string'
        },
        azureadb2c: {
            type: 'string'
        },
        baidu: {
            type: 'string'
        },
        battlenet: {
            type: 'string'
        },
        bilibili: {
            type: 'string'
        },
        bio: {
            type: 'string'
        },
        birthday: {
            type: 'string'
        },
        bitbucket: {
            type: 'string'
        },
        box: {
            type: 'string'
        },
        casdoor: {
            type: 'string'
        },
        cloudfoundry: {
            type: 'string'
        },
        countryCode: {
            type: 'string'
        },
        createdIp: {
            type: 'string'
        },
        createdTime: {
            type: 'string'
        },
        custom: {
            type: 'string'
        },
        dailymotion: {
            type: 'string'
        },
        deezer: {
            type: 'string'
        },
        digitalocean: {
            type: 'string'
        },
        dingtalk: {
            type: 'string'
        },
        discord: {
            type: 'string'
        },
        displayName: {
            type: 'string'
        },
        deletedTime: {
            type: 'string'
        },
        douyin: {
            type: 'string'
        },
        dropbox: {
            type: 'string'
        },
        education: {
            type: 'string'
        },
        email: {
            type: 'string'
        },
        emailVerified: {
            type: 'boolean'
        },
        eveonline: {
            type: 'string'
        },
        externalId: {
            type: 'string'
        },
        facebook: {
            type: 'string'
        },
        firstName: {
            type: 'string'
        },
        fitbit: {
            type: 'string'
        },
        gender: {
            type: 'string'
        },
        gitea: {
            type: 'string'
        },
        gitee: {
            type: 'string'
        },
        github: {
            type: 'string'
        },
        gitlab: {
            type: 'string'
        },
        google: {
            type: 'string'
        },
        groups: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        hash: {
            type: 'string'
        },
        heroku: {
            type: 'string'
        },
        homepage: {
            type: 'string'
        },
        id: {
            type: 'string'
        },
        idCard: {
            type: 'string'
        },
        idCardType: {
            type: 'string'
        },
        influxcloud: {
            type: 'string'
        },
        infoflow: {
            type: 'string'
        },
        instagram: {
            type: 'string'
        },
        intercom: {
            type: 'string'
        },
        isAdmin: {
            type: 'boolean'
        },
        isDefaultAvatar: {
            type: 'boolean'
        },
        isDeleted: {
            type: 'boolean'
        },
        isForbidden: {
            type: 'boolean'
        },
        isOnline: {
            type: 'boolean'
        },
        kakao: {
            type: 'string'
        },
        karma: {
            type: 'integer',
            format: 'int64'
        },
        language: {
            type: 'string'
        },
        lark: {
            type: 'string'
        },
        lastName: {
            type: 'string'
        },
        lastSigninIp: {
            type: 'string'
        },
        lastSigninTime: {
            type: 'string'
        },
        lastSigninWrongTime: {
            type: 'string'
        },
        lastfm: {
            type: 'string'
        },
        ldap: {
            type: 'string'
        },
        line: {
            type: 'string'
        },
        linkedin: {
            type: 'string'
        },
        location: {
            type: 'string'
        },
        mailru: {
            type: 'string'
        },
        managedAccounts: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.ManagedAccount'
            }
        },
        meetup: {
            type: 'string'
        },
        metamask: {
            type: 'string'
        },
        mfaEmailEnabled: {
            type: 'boolean'
        },
        mfaPhoneEnabled: {
            type: 'boolean'
        },
        microsoftonline: {
            type: 'string'
        },
        multiFactorAuths: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.MfaProps'
            }
        },
        name: {
            type: 'string'
        },
        naver: {
            type: 'string'
        },
        nextcloud: {
            type: 'string'
        },
        okta: {
            type: 'string'
        },
        onedrive: {
            type: 'string'
        },
        oura: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        password: {
            type: 'string'
        },
        passwordSalt: {
            type: 'string'
        },
        passwordType: {
            type: 'string'
        },
        patreon: {
            type: 'string'
        },
        paypal: {
            type: 'string'
        },
        permanentAvatar: {
            type: 'string'
        },
        permissions: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.Permission'
            }
        },
        phone: {
            type: 'string'
        },
        preHash: {
            type: 'string'
        },
        preferredMfaType: {
            type: 'string'
        },
        properties: {
            additionalProperties: {
                type: 'string'
            }
        },
        qq: {
            type: 'string'
        },
        ranking: {
            type: 'integer',
            format: 'int64'
        },
        recoveryCodes: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        region: {
            type: 'string'
        },
        roles: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.Role'
            }
        },
        salesforce: {
            type: 'string'
        },
        score: {
            type: 'integer',
            format: 'int64'
        },
        shopify: {
            type: 'string'
        },
        signinWrongTimes: {
            type: 'integer',
            format: 'int64'
        },
        signupApplication: {
            type: 'string'
        },
        slack: {
            type: 'string'
        },
        soundcloud: {
            type: 'string'
        },
        spotify: {
            type: 'string'
        },
        steam: {
            type: 'string'
        },
        strava: {
            type: 'string'
        },
        stripe: {
            type: 'string'
        },
        tag: {
            type: 'string'
        },
        tiktok: {
            type: 'string'
        },
        title: {
            type: 'string'
        },
        totpSecret: {
            type: 'string'
        },
        tumblr: {
            type: 'string'
        },
        twitch: {
            type: 'string'
        },
        twitter: {
            type: 'string'
        },
        type: {
            type: 'string'
        },
        typetalk: {
            type: 'string'
        },
        uber: {
            type: 'string'
        },
        updatedTime: {
            type: 'string'
        },
        vk: {
            type: 'string'
        },
        web3onboard: {
            type: 'string'
        },
        webauthnCredentials: {
            type: 'array',
            items: {
                '$ref': '#/definitions/webauthn.Credential'
            }
        },
        wechat: {
            type: 'string'
        },
        wecom: {
            type: 'string'
        },
        weibo: {
            type: 'string'
        },
        wepay: {
            type: 'string'
        },
        xero: {
            type: 'string'
        },
        yahoo: {
            type: 'string'
        },
        yammer: {
            type: 'string'
        },
        yandex: {
            type: 'string'
        },
        zoom: {
            type: 'string'
        }
    }
} as const;

export const $object_Userinfo = {
    title: 'Userinfo',
    type: 'object',
    properties: {
        address: {
            type: 'string'
        },
        aud: {
            type: 'string'
        },
        email: {
            type: 'string'
        },
        email_verified: {
            type: 'boolean'
        },
        groups: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        iss: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        phone: {
            type: 'string'
        },
        picture: {
            type: 'string'
        },
        preferred_username: {
            type: 'string'
        },
        sub: {
            type: 'string'
        }
    }
} as const;

export const $object_Webhook = {
    title: 'Webhook',
    type: 'object',
    properties: {
        contentType: {
            type: 'string'
        },
        createdTime: {
            type: 'string'
        },
        events: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        headers: {
            type: 'array',
            items: {
                '$ref': '#/definitions/object.Header'
            }
        },
        isEnabled: {
            type: 'boolean'
        },
        isUserExtended: {
            type: 'boolean'
        },
        method: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        organization: {
            type: 'string'
        },
        owner: {
            type: 'string'
        },
        url: {
            type: 'string'
        }
    }
} as const;

export const $pp_PaymentState = {
    title: 'PaymentState',
    type: 'string',
    enum: ['PaymentStatePaid = "Paid"', 'PaymentStateCreated = "Created"', 'PaymentStateCanceled = "Canceled"', 'PaymentStateTimeout = "Timeout"', 'PaymentStateError = "Error"'],
    example: 'Paid'
} as const;

export const $protocol_CredentialAssertion = {
    title: 'CredentialAssertion',
    type: 'object'
} as const;

export const $protocol_CredentialAssertionResponse = {
    title: 'CredentialAssertionResponse',
    type: 'object'
} as const;

export const $protocol_CredentialCreation = {
    title: 'CredentialCreation',
    type: 'object'
} as const;

export const $protocol_CredentialCreationResponse = {
    title: 'CredentialCreationResponse',
    type: 'object'
} as const;

export const $util_SystemInfo = {
    title: 'SystemInfo',
    type: 'object',
    properties: {
        cpuUsage: {
            type: 'array',
            items: {
                type: 'number',
                format: 'double'
            }
        },
        memoryTotal: {
            type: 'integer',
            format: 'int64'
        },
        memoryUsed: {
            type: 'integer',
            format: 'int64'
        }
    }
} as const;

export const $util_VersionInfo = {
    title: 'VersionInfo',
    type: 'object',
    properties: {
        commitId: {
            type: 'string'
        },
        commitOffset: {
            type: 'integer',
            format: 'int64'
        },
        version: {
            type: 'string'
        }
    }
} as const;

export const $webauthn_Credential = {
    title: 'Credential',
    type: 'object'
} as const;

export const $xorm_Engine = {
    title: 'Engine',
    type: 'object'
} as const;

export const $xormadapter_Adapter = {
    title: 'Adapter',
    type: 'object'
} as const;