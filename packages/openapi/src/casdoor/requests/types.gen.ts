// This file is auto-generated by @hey-api/openapi-ts

export type casbin_Enforcer = unknown;

export type controllers_AuthForm = unknown;

export interface controllers_EmailForm {
    content?: string;
    provider?: string;
    receivers?: string[];
    sender?: string;
    title?: string;
}

export interface controllers_LaravelResponse {
    created_at?: string;
    email?: string;
    email_verified_at?: string;
    id?: string;
    name?: string;
    updated_at?: string;
}

export interface controllers_LdapResp {
    existUuids?: string[];
    users?: object_LdapUser[];
}

export interface controllers_LdapSyncResp {
    exist?: object_LdapUser[];
    failed?: object_LdapUser[];
}

export interface controllers_NotificationForm {
    content?: string;
}

export interface controllers_Response {
    data?: unknown;
    data2?: unknown;
    msg?: string;
    name?: string;
    status?: string;
    sub?: string;
}

export interface controllers_SmsForm {
    content?: string;
    organizationId?: string;
    receivers?: string[];
}

export type jose_JSONWebKey = unknown;

export type model_Model = unknown;

export type UnknownType = unknown;

export interface object_AccountItem {
    modifyRule?: string;
    name?: string;
    viewRule?: string;
    visible?: boolean;
}

export interface object_Adapter {
    createdTime?: string;
    database?: string;
    databaseType?: string;
    host?: string;
    name?: string;
    owner?: string;
    password?: string;
    port?: number;
    table?: string;
    type?: string;
    useSameDb?: boolean;
    user?: string;
}

export interface object_Application {
    affiliationUrl?: string;
    cert?: string;
    certPublicKey?: string;
    clientId?: string;
    clientSecret?: string;
    createdTime?: string;
    description?: string;
    displayName?: string;
    enableAutoSignin?: boolean;
    enableCodeSignin?: boolean;
    enableLinkWithEmail?: boolean;
    enablePassword?: boolean;
    enableSamlC14n10?: boolean;
    enableSamlCompress?: boolean;
    enableSamlPostBinding?: boolean;
    enableSignUp?: boolean;
    enableSigninSession?: boolean;
    enableWebAuthn?: boolean;
    expireInHours?: number;
    failedSigninFrozenTime?: number;
    failedSigninLimit?: number;
    forgetUrl?: string;
    formBackgroundUrl?: string;
    formCss?: string;
    formCssMobile?: string;
    formOffset?: number;
    formSideHtml?: string;
    grantTypes?: string[];
    homepageUrl?: string;
    invitationCodes?: string[];
    logo?: string;
    name?: string;
    orgChoiceMode?: string;
    organization?: string;
    organizationObj?: object_Organization;
    owner?: string;
    providers?: object_ProviderItem[];
    redirectUris?: string[];
    refreshExpireInHours?: number;
    samlAttributes?: object_SamlItem[];
    samlReplyUrl?: string;
    signinHtml?: string;
    signinMethods?: object_SigninMethod[];
    signinUrl?: string;
    signupHtml?: string;
    signupItems?: object_SignupItem[];
    signupUrl?: string;
    tags?: string[];
    termsOfUse?: string;
    themeData?: object_ThemeData;
    tokenFields?: string[];
    tokenFormat?: string;
}

export interface object_Cert {
    bitSize?: number;
    certificate?: string;
    createdTime?: string;
    cryptoAlgorithm?: string;
    displayName?: string;
    expireInYears?: number;
    name?: string;
    owner?: string;
    privateKey?: string;
    scope?: string;
    type?: string;
}

export interface object_Enforcer {
    adapter?: string;
    createdTime?: string;
    description?: string;
    displayName?: string;
    model?: string;
    modelCfg?: unknown;
    name?: string;
    owner?: string;
    updatedTime?: string;
}

export interface object_GaugeVecInfo {
    method?: string;
    name?: string;
    throughput?: number;
}

export interface object_Group {
    children?: object_Group[];
    contactEmail?: string;
    createdTime?: string;
    displayName?: string;
    isEnabled?: boolean;
    isTopGroup?: boolean;
    key?: string;
    manager?: string;
    name?: string;
    owner?: string;
    parentId?: string;
    title?: string;
    type?: string;
    updatedTime?: string;
    users?: object_User[];
}

export interface object_Header {
    name?: string;
    value?: string;
}

export interface object_HistogramVecInfo {
    count?: number;
    latency?: string;
    method?: string;
    name?: string;
}

export interface object_IntrospectionResponse {
    active?: boolean;
    aud?: string[];
    client_id?: string;
    exp?: number;
    iat?: number;
    iss?: string;
    jti?: string;
    nbf?: number;
    scope?: string;
    sub?: string;
    token_type?: string;
    username?: string;
}

export interface object_Invitation {
    application?: string;
    code?: string;
    createdTime?: string;
    displayName?: string;
    email?: string;
    name?: string;
    owner?: string;
    phone?: string;
    quota?: number;
    signupGroup?: string;
    state?: string;
    updatedTime?: string;
    usedCount?: number;
    username?: string;
}

export interface object_Ldap {
    autoSync?: number;
    baseDn?: string;
    createdTime?: string;
    enableSsl?: boolean;
    filter?: string;
    filterFields?: string[];
    host?: string;
    id?: string;
    lastSync?: string;
    owner?: string;
    password?: string;
    port?: number;
    serverName?: string;
    username?: string;
}

export interface object_LdapUser {
    EmailAddress?: string;
    Mail?: string;
    MobileTelephoneNumber?: string;
    PostalAddress?: string;
    RegisteredAddress?: string;
    TelephoneNumber?: string;
    address?: string;
    cn?: string;
    displayName?: string;
    email?: string;
    gidNumber?: string;
    groupId?: string;
    memberOf?: string;
    mobile?: string;
    uid?: string;
    uidNumber?: string;
    userPrincipalName?: string;
    uuid?: string;
}

export interface object_ManagedAccount {
    application?: string;
    password?: string;
    signinUrl?: string;
    username?: string;
}

export interface object_MfaItem {
    name?: string;
    rule?: string;
}

export interface object_MfaProps {
    countryCode?: string;
    enabled?: boolean;
    isPreferred?: boolean;
    mfaType?: string;
    recoveryCodes?: string[];
    secret?: string;
    url?: string;
}

export interface object_Model {
    createdTime?: string;
    description?: string;
    displayName?: string;
    modelText?: string;
    name?: string;
    owner?: string;
}

export interface object_OidcDiscovery {
    authorization_endpoint?: string;
    claims_supported?: string[];
    end_session_endpoint?: string;
    grant_types_supported?: string[];
    id_token_signing_alg_values_supported?: string[];
    introspection_endpoint?: string;
    issuer?: string;
    jwks_uri?: string;
    request_object_signing_alg_values_supported?: string[];
    request_parameter_supported?: boolean;
    response_modes_supported?: string[];
    response_types_supported?: string[];
    scopes_supported?: string[];
    subject_types_supported?: string[];
    token_endpoint?: string;
    userinfo_endpoint?: string;
}

export interface object_Organization {
    accountItems?: object_AccountItem[];
    countryCodes?: string[];
    createdTime?: string;
    defaultApplication?: string;
    defaultAvatar?: string;
    defaultPassword?: string;
    displayName?: string;
    enableSoftDeletion?: boolean;
    favicon?: string;
    initScore?: number;
    isProfilePublic?: boolean;
    languages?: string[];
    masterPassword?: string;
    masterVerificationCode?: string;
    mfaItems?: object_MfaItem[];
    name?: string;
    owner?: string;
    passwordOptions?: string[];
    passwordSalt?: string;
    passwordType?: string;
    tags?: string[];
    themeData?: object_ThemeData;
    websiteUrl?: string;
}

export interface object_Ormer {
    Engine?: xorm_Engine;
    dataSourceName?: string;
    dbName?: string;
    driverName?: string;
}

export interface object_Payment {
    createdTime?: string;
    currency?: string;
    detail?: string;
    displayName?: string;
    invoiceRemark?: string;
    invoiceTaxId?: string;
    invoiceTitle?: string;
    invoiceType?: string;
    invoiceUrl?: string;
    message?: string;
    name?: string;
    outOrderId?: string;
    owner?: string;
    payUrl?: string;
    personEmail?: string;
    personIdCard?: string;
    personName?: string;
    personPhone?: string;
    price?: number;
    productDisplayName?: string;
    productName?: string;
    provider?: string;
    returnUrl?: string;
    state?: pp_PaymentState;
    successUrl?: string;
    tag?: string;
    type?: string;
    user?: string;
}

export interface object_Permission {
    actions?: string[];
    adapter?: string;
    approveTime?: string;
    approver?: string;
    createdTime?: string;
    description?: string;
    displayName?: string;
    domains?: string[];
    effect?: string;
    groups?: string[];
    isEnabled?: boolean;
    model?: string;
    name?: string;
    owner?: string;
    resourceType?: string;
    resources?: string[];
    roles?: string[];
    state?: string;
    submitter?: string;
    users?: string[];
}

export interface object_Plan {
    createdTime?: string;
    currency?: string;
    description?: string;
    displayName?: string;
    isEnabled?: boolean;
    name?: string;
    options?: string[];
    owner?: string;
    paymentProviders?: string[];
    period?: string;
    price?: number;
    product?: string;
    role?: string;
}

export interface object_Pricing {
    application?: string;
    createdTime?: string;
    description?: string;
    displayName?: string;
    isEnabled?: boolean;
    name?: string;
    owner?: string;
    plans?: string[];
    trialDuration?: number;
}

export interface object_Product {
    createdTime?: string;
    currency?: string;
    description?: string;
    detail?: string;
    displayName?: string;
    image?: string;
    name?: string;
    owner?: string;
    price?: number;
    providerObjs?: object_Provider[];
    providers?: string[];
    quantity?: number;
    returnUrl?: string;
    sold?: number;
    state?: string;
    tag?: string;
}

export interface object_PrometheusInfo {
    apiLatency?: object_HistogramVecInfo[];
    apiThroughput?: object_GaugeVecInfo[];
    totalThroughput?: number;
}

export interface object_Provider {
    appId?: string;
    bucket?: string;
    category?: string;
    cert?: string;
    clientId?: string;
    clientId2?: string;
    clientSecret?: string;
    clientSecret2?: string;
    content?: string;
    createdTime?: string;
    customAuthUrl?: string;
    customLogo?: string;
    customTokenUrl?: string;
    customUserInfoUrl?: string;
    disableSsl?: boolean;
    displayName?: string;
    domain?: string;
    enableSignAuthnRequest?: boolean;
    endpoint?: string;
    host?: string;
    idP?: string;
    intranetEndpoint?: string;
    issuerUrl?: string;
    metadata?: string;
    method?: string;
    name?: string;
    owner?: string;
    pathPrefix?: string;
    port?: number;
    providerUrl?: string;
    receiver?: string;
    regionId?: string;
    scopes?: string;
    signName?: string;
    subType?: string;
    templateCode?: string;
    title?: string;
    type?: string;
    userMapping?: unknown;
}

export interface object_ProviderItem {
    canSignIn?: boolean;
    canSignUp?: boolean;
    canUnlink?: boolean;
    name?: string;
    owner?: string;
    prompted?: boolean;
    provider?: object_Provider;
    rule?: string;
    signupGroup?: string;
}

export interface object_Resource {
    application?: string;
    createdTime?: string;
    description?: string;
    fileFormat?: string;
    fileName?: string;
    fileSize?: number;
    fileType?: string;
    name?: string;
    owner?: string;
    parent?: string;
    provider?: string;
    tag?: string;
    url?: string;
    user?: string;
}

export interface object_Role {
    createdTime?: string;
    description?: string;
    displayName?: string;
    domains?: string[];
    groups?: string[];
    isEnabled?: boolean;
    name?: string;
    owner?: string;
    roles?: string[];
    users?: string[];
}

export interface object_SamlItem {
    name?: string;
    nameFormat?: string;
    value?: string;
}

export interface object_SigninMethod {
    displayName?: string;
    name?: string;
    rule?: string;
}

export interface object_SignupItem {
    label?: string;
    name?: string;
    placeholder?: string;
    prompted?: boolean;
    regex?: string;
    required?: boolean;
    rule?: string;
    visible?: boolean;
}

export interface object_Subscription {
    createdTime?: string;
    description?: string;
    displayName?: string;
    endTime?: string;
    name?: string;
    owner?: string;
    payment?: string;
    period?: string;
    plan?: string;
    pricing?: string;
    startTime?: string;
    state?: object_SubscriptionState;
    user?: string;
}

export enum object_SubscriptionState {
    SUB_STATE_PENDING____PENDING_ = 'SubStatePending = "Pending"',
    SUB_STATE_ERROR____ERROR_ = 'SubStateError = "Error"',
    SUB_STATE_SUSPENDED____SUSPENDED_ = 'SubStateSuspended = "Suspended"',
    SUB_STATE_ACTIVE____ACTIVE_ = 'SubStateActive = "Active"',
    SUB_STATE_UPCOMING____UPCOMING_ = 'SubStateUpcoming = "Upcoming"',
    SUB_STATE_EXPIRED____EXPIRED_ = 'SubStateExpired = "Expired"'
}

export interface object_Syncer {
    affiliationTable?: string;
    avatarBaseUrl?: string;
    createdTime?: string;
    database?: string;
    databaseType?: string;
    errorText?: string;
    host?: string;
    isEnabled?: boolean;
    isReadOnly?: boolean;
    name?: string;
    organization?: string;
    owner?: string;
    password?: string;
    port?: number;
    sslMode?: string;
    syncInterval?: number;
    table?: string;
    tableColumns?: object_TableColumn[];
    type?: string;
    user?: string;
}

export interface object_TableColumn {
    casdoorName?: string;
    isHashed?: boolean;
    isKey?: boolean;
    name?: string;
    type?: string;
    values?: string[];
}

export interface object_ThemeData {
    borderRadius?: number;
    colorPrimary?: string;
    isCompact?: boolean;
    isEnabled?: boolean;
    themeType?: string;
}

export interface object_Token {
    accessToken?: string;
    accessTokenHash?: string;
    application?: string;
    code?: string;
    codeChallenge?: string;
    codeExpireIn?: number;
    codeIsUsed?: boolean;
    createdTime?: string;
    expiresIn?: number;
    name?: string;
    organization?: string;
    owner?: string;
    refreshToken?: string;
    refreshTokenHash?: string;
    scope?: string;
    tokenType?: string;
    user?: string;
}

export interface object_TokenError {
    error?: string;
    error_description?: string;
}

export interface object_TokenWrapper {
    access_token?: string;
    expires_in?: number;
    id_token?: string;
    refresh_token?: string;
    scope?: string;
    token_type?: string;
}

export interface object_User {
    accessKey?: string;
    accessSecret?: string;
    address?: string[];
    adfs?: string;
    affiliation?: string;
    alipay?: string;
    amazon?: string;
    apple?: string;
    auth0?: string;
    avatar?: string;
    avatarType?: string;
    azuread?: string;
    azureadb2c?: string;
    baidu?: string;
    battlenet?: string;
    bilibili?: string;
    bio?: string;
    birthday?: string;
    bitbucket?: string;
    box?: string;
    casdoor?: string;
    cloudfoundry?: string;
    countryCode?: string;
    createdIp?: string;
    createdTime?: string;
    custom?: string;
    dailymotion?: string;
    deezer?: string;
    digitalocean?: string;
    dingtalk?: string;
    discord?: string;
    displayName?: string;
    deletedTime?: string;
    douyin?: string;
    dropbox?: string;
    education?: string;
    email?: string;
    emailVerified?: boolean;
    eveonline?: string;
    externalId?: string;
    facebook?: string;
    firstName?: string;
    fitbit?: string;
    gender?: string;
    gitea?: string;
    gitee?: string;
    github?: string;
    gitlab?: string;
    google?: string;
    groups?: string[];
    hash?: string;
    heroku?: string;
    homepage?: string;
    id?: string;
    idCard?: string;
    idCardType?: string;
    influxcloud?: string;
    infoflow?: string;
    instagram?: string;
    intercom?: string;
    isAdmin?: boolean;
    isDefaultAvatar?: boolean;
    isDeleted?: boolean;
    isForbidden?: boolean;
    isOnline?: boolean;
    kakao?: string;
    karma?: number;
    language?: string;
    lark?: string;
    lastName?: string;
    lastSigninIp?: string;
    lastSigninTime?: string;
    lastSigninWrongTime?: string;
    lastfm?: string;
    ldap?: string;
    line?: string;
    linkedin?: string;
    location?: string;
    mailru?: string;
    managedAccounts?: object_ManagedAccount[];
    meetup?: string;
    metamask?: string;
    mfaEmailEnabled?: boolean;
    mfaPhoneEnabled?: boolean;
    microsoftonline?: string;
    multiFactorAuths?: object_MfaProps[];
    name?: string;
    naver?: string;
    nextcloud?: string;
    okta?: string;
    onedrive?: string;
    oura?: string;
    owner?: string;
    password?: string;
    passwordSalt?: string;
    passwordType?: string;
    patreon?: string;
    paypal?: string;
    permanentAvatar?: string;
    permissions?: object_Permission[];
    phone?: string;
    preHash?: string;
    preferredMfaType?: string;
    properties?: unknown;
    qq?: string;
    ranking?: number;
    recoveryCodes?: string[];
    region?: string;
    roles?: object_Role[];
    salesforce?: string;
    score?: number;
    shopify?: string;
    signinWrongTimes?: number;
    signupApplication?: string;
    slack?: string;
    soundcloud?: string;
    spotify?: string;
    steam?: string;
    strava?: string;
    stripe?: string;
    tag?: string;
    tiktok?: string;
    title?: string;
    totpSecret?: string;
    tumblr?: string;
    twitch?: string;
    twitter?: string;
    type?: string;
    typetalk?: string;
    uber?: string;
    updatedTime?: string;
    vk?: string;
    web3onboard?: string;
    webauthnCredentials?: webauthn_Credential[];
    wechat?: string;
    wecom?: string;
    weibo?: string;
    wepay?: string;
    xero?: string;
    yahoo?: string;
    yammer?: string;
    yandex?: string;
    zoom?: string;
}

export interface object_Userinfo {
    address?: string;
    aud?: string;
    email?: string;
    email_verified?: boolean;
    groups?: string[];
    iss?: string;
    name?: string;
    phone?: string;
    picture?: string;
    preferred_username?: string;
    sub?: string;
}

export interface object_Webhook {
    contentType?: string;
    createdTime?: string;
    events?: string[];
    headers?: object_Header[];
    isEnabled?: boolean;
    isUserExtended?: boolean;
    method?: string;
    name?: string;
    organization?: string;
    owner?: string;
    url?: string;
}

export enum pp_PaymentState {
    PAYMENT_STATE_PAID____PAID_ = 'PaymentStatePaid = "Paid"',
    PAYMENT_STATE_CREATED____CREATED_ = 'PaymentStateCreated = "Created"',
    PAYMENT_STATE_CANCELED____CANCELED_ = 'PaymentStateCanceled = "Canceled"',
    PAYMENT_STATE_TIMEOUT____TIMEOUT_ = 'PaymentStateTimeout = "Timeout"',
    PAYMENT_STATE_ERROR____ERROR_ = 'PaymentStateError = "Error"'
}

export type protocol_CredentialAssertion = unknown;

export type protocol_CredentialAssertionResponse = unknown;

export type protocol_CredentialCreation = unknown;

export type protocol_CredentialCreationResponse = unknown;

export interface util_SystemInfo {
    cpuUsage?: number[];
    memoryTotal?: number;
    memoryUsed?: number;
}

export interface util_VersionInfo {
    commitId?: string;
    commitOffset?: number;
    version?: string;
}

export type webauthn_Credential = unknown;

export type xorm_Engine = unknown;

export type xormadapter_Adapter = unknown;

export type RootControllerGetJwksResponse = jose_JSONWebKey;

export type RootControllerGetOidcDiscoveryResponse = object_OidcDiscovery;

export type ApiControllerCallbackResponse = object_Userinfo;

export interface ApiControllerAddAdapterData {
    /**
     * The details of the adapter
     */
    body: object_Adapter;
}

export type ApiControllerAddAdapterResponse = controllers_Response;

export interface ApiControllerDeleteAdapterData {
    /**
     * The details of the adapter
     */
    body: object_Adapter;
}

export type ApiControllerDeleteAdapterResponse = controllers_Response;

export interface ApiControllerGetAdapterData {
    /**
     * The id ( owner/name ) of the adapter
     */
    id: string;
}

export type ApiControllerGetAdapterResponse = object_Adapter;

export interface ApiControllerGetAdaptersData {
    /**
     * The owner of adapters
     */
    owner: string;
}

export type ApiControllerGetAdaptersResponse = object_Adapter[];

export interface ApiControllerUpdateAdapterData {
    /**
     * The details of the adapter
     */
    body: object_Adapter;
    /**
     * The id ( owner/name ) of the adapter
     */
    id: string;
}

export type ApiControllerUpdateAdapterResponse = controllers_Response;

export interface ApiControllerAddApplicationData {
    /**
     * The details of the application
     */
    body: object_Application;
}

export type ApiControllerAddApplicationResponse = controllers_Response;

export interface ApiControllerDeleteApplicationData {
    /**
     * The details of the application
     */
    body: object_Application;
}

export type ApiControllerDeleteApplicationResponse = controllers_Response;

export interface ApiControllerGetApplicationData {
    /**
     * The id ( owner/name ) of the application.
     */
    id: string;
}

export type ApiControllerGetApplicationResponse = object_Application;

export interface ApiControllerGetApplicationsData {
    /**
     * The owner of applications.
     */
    owner: string;
}

export type ApiControllerGetApplicationsResponse = object_Application[];

export interface ApiControllerGetOrganizationApplicationsData {
    /**
     * The organization name
     */
    organization: string;
}

export type ApiControllerGetOrganizationApplicationsResponse = object_Application[];

export interface ApiControllerGetUserApplicationData {
    /**
     * The id ( owner/name ) of the user
     */
    id: string;
}

export type ApiControllerGetUserApplicationResponse = object_Application;

export interface ApiControllerUpdateApplicationData {
    /**
     * The details of the application
     */
    body: object_Application;
    /**
     * The id ( owner/name ) of the application
     */
    id: string;
}

export type ApiControllerUpdateApplicationResponse = controllers_Response;

export interface ApiControllerAddCertData {
    /**
     * The details of the cert
     */
    body: object_Cert;
}

export type ApiControllerAddCertResponse = controllers_Response;

export interface ApiControllerDeleteCertData {
    /**
     * The details of the cert
     */
    body: object_Cert;
}

export type ApiControllerDeleteCertResponse = controllers_Response;

export interface ApiControllerGetCertData {
    /**
     * The id ( owner/name ) of the cert
     */
    id: string;
}

export type ApiControllerGetCertResponse = object_Cert;

export interface ApiControllerGetCertsData {
    /**
     * The owner of certs
     */
    owner: string;
}

export type ApiControllerGetCertsResponse = object_Cert[];

export type ApiControllerGetGlobalCertsResponse = object_Cert[];

export interface ApiControllerUpdateCertData {
    /**
     * The details of the cert
     */
    body: object_Cert;
    /**
     * The id ( owner/name ) of the cert
     */
    id: string;
}

export type ApiControllerUpdateCertResponse = controllers_Response;

export interface ApiControllerAddEnforcerData {
    /**
     * The enforcer object
     */
    enforcer: object;
}

export type ApiControllerAddEnforcerResponse = object_Enforcer;

export interface ApiControllerBatchEnforceData {
    /**
     * array of casbin requests
     */
    body: string[];
    /**
     * model id
     */
    modelId?: string;
    /**
     * owner
     */
    owner?: string;
    /**
     * permission id
     */
    permissionId?: string;
}

export type ApiControllerBatchEnforceResponse = controllers_Response;

export interface ApiControllerDeleteEnforcerData {
    /**
     * The enforcer object
     */
    body: object_Enforcer;
}

export type ApiControllerDeleteEnforcerResponse = object_Enforcer;

export interface ApiControllerEnforceData {
    /**
     * Casbin request
     */
    body: string[];
    /**
     * model id
     */
    modelId?: string;
    /**
     * owner
     */
    owner?: string;
    /**
     * permission id
     */
    permissionId?: string;
    /**
     * resource id
     */
    resourceId?: string;
}

export type ApiControllerEnforceResponse = controllers_Response;

export interface ApiControllerGetEnforcerData {
    /**
     * The id ( owner/name )  of enforcer
     */
    id: string;
}

export type ApiControllerGetEnforcerResponse = object_Enforcer;

export interface ApiControllerGetEnforcersData {
    /**
     * The owner of enforcers
     */
    owner: string;
}

export type ApiControllerGetEnforcersResponse = object_Enforcer[];

export interface ApiControllerUpdateEnforcerData {
    /**
     * The enforcer object
     */
    enforcer: object;
    /**
     * The id ( owner/name )  of enforcer
     */
    id: string;
}

export type ApiControllerUpdateEnforcerResponse = object_Enforcer;

export interface ApiControllerAddGroupData {
    /**
     * The details of the group
     */
    body: object_Group;
}

export type ApiControllerAddGroupResponse = controllers_Response;

export interface ApiControllerDeleteGroupData {
    /**
     * The details of the group
     */
    body: object_Group;
}

export type ApiControllerDeleteGroupResponse = controllers_Response;

export interface ApiControllerGetGroupData {
    /**
     * The id ( owner/name ) of the group
     */
    id: string;
}

export type ApiControllerGetGroupResponse = object_Group;

export interface ApiControllerGetGroupsData {
    /**
     * The owner of groups
     */
    owner: string;
}

export type ApiControllerGetGroupsResponse = object_Group[];

export interface ApiControllerUpdateGroupData {
    /**
     * The details of the group
     */
    body: object_Group;
    /**
     * The id ( owner/name ) of the group
     */
    id: string;
}

export type ApiControllerUpdateGroupResponse = controllers_Response;

export interface ApiControllerAddInvitationData {
    /**
     * The details of the invitation
     */
    body: object_Invitation;
}

export type ApiControllerAddInvitationResponse = controllers_Response;

export interface ApiControllerDeleteInvitationData {
    /**
     * The details of the invitation
     */
    body: object_Invitation;
}

export type ApiControllerDeleteInvitationResponse = controllers_Response;

export interface ApiControllerGetInvitationData {
    /**
     * The id ( owner/name ) of the invitation
     */
    id: string;
}

export type ApiControllerGetInvitationResponse = object_Invitation;

export interface ApiControllerGetInvitationsData {
    /**
     * The owner of invitations
     */
    owner: string;
}

export type ApiControllerGetInvitationsResponse = object_Invitation[];

export interface ApiControllerUpdateInvitationData {
    /**
     * The details of the invitation
     */
    body: object_Invitation;
    /**
     * The id ( owner/name ) of the invitation
     */
    id: string;
}

export type ApiControllerUpdateInvitationResponse = controllers_Response;

export interface ApiControllerVerifyInvitationData {
    /**
     * The id ( owner/name ) of the invitation
     */
    id: string;
}

export type ApiControllerVerifyInvitationResponse = controllers_Response;

export interface ApiControllerAddLdapData {
    /**
     * The details of the ldap
     */
    body: object_Ldap;
}

export type ApiControllerAddLdapResponse = controllers_Response;

export interface ApiControllerDeleteLdapData {
    /**
     * The details of the ldap
     */
    body: object_Ldap;
}

export type ApiControllerDeleteLdapResponse = controllers_Response;

export type ApiControllerGetAccountResponse = controllers_Response;

export interface ApiControllerGetLdapData {
    /**
     * id
     */
    id: string;
}

export type ApiControllerGetLdapResponse = object_Ldap;

export type ApiControllerGetLdapserResponse = controllers_LdapResp;

export interface ApiControllerGetLdapsData {
    /**
     * owner
     */
    owner?: string;
}

export type ApiControllerGetLdapsResponse = object_Ldap[];

export type ApiControllerResetEmailOrPhoneResponse = object_Userinfo;

export interface ApiControllerSetPasswordData {
    /**
     * The new password of the user
     */
    newPassword: string;
    /**
     * The old password of the user
     */
    oldPassword: string;
    /**
     * The name of the user
     */
    userName: string;
    /**
     * The owner of the user
     */
    userOwner: string;
}

export type ApiControllerSetPasswordResponse = controllers_Response;

export interface ApiControllerSyncLdapUsersData {
    /**
     * id
     */
    id: string;
}

export type ApiControllerSyncLdapUsersResponse = controllers_LdapSyncResp;

export interface ApiControllerUpdateLdapData {
    /**
     * The details of the ldap
     */
    body: object_Ldap;
}

export type ApiControllerUpdateLdapResponse = controllers_Response;

export type ApiControllerUserInfo2Response = controllers_LaravelResponse;

export type ApiControllerUserInfoResponse = object_Userinfo;

export interface ApiControllerAddModelData {
    /**
     * The details of the model
     */
    body: object_Model;
}

export type ApiControllerAddModelResponse = controllers_Response;

export interface ApiControllerDeleteModelData {
    /**
     * The details of the model
     */
    body: object_Model;
}

export type ApiControllerDeleteModelResponse = controllers_Response;

export interface ApiControllerGetModelData {
    /**
     * The id ( owner/name ) of the model
     */
    id: string;
}

export type ApiControllerGetModelResponse = object_Model;

export interface ApiControllerGetModelsData {
    /**
     * The owner of models
     */
    owner: string;
}

export type ApiControllerGetModelsResponse = object_Model[];

export interface ApiControllerUpdateModelData {
    /**
     * The details of the model
     */
    body: object_Model;
    /**
     * The id ( owner/name ) of the model
     */
    id: string;
}

export type ApiControllerUpdateModelResponse = controllers_Response;

export interface ApiControllerAddOrganizationData {
    /**
     * The details of the organization
     */
    body: object_Organization;
}

export type ApiControllerAddOrganizationResponse = controllers_Response;

export interface ApiControllerDeleteOrganizationData {
    /**
     * The details of the organization
     */
    body: object_Organization;
}

export type ApiControllerDeleteOrganizationResponse = controllers_Response;

export interface ApiControllerGetDefaultApplicationData {
    /**
     * organization id
     */
    id: string;
}

export type ApiControllerGetDefaultApplicationResponse = controllers_Response;

export interface ApiControllerGetOrganizationData {
    /**
     * organization id
     */
    id: string;
}

export type ApiControllerGetOrganizationResponse = object_Organization;

export interface ApiControllerGetOrganizationNamesData {
    /**
     * owner
     */
    owner: string;
}

export type ApiControllerGetOrganizationNamesResponse = object_Organization[];

export interface ApiControllerGetOrganizationsData {
    /**
     * owner
     */
    owner: string;
}

export type ApiControllerGetOrganizationsResponse = object_Organization[];

export interface ApiControllerUpdateOrganizationData {
    /**
     * The details of the organization
     */
    body: object_Organization;
    /**
     * The id ( owner/name ) of the organization
     */
    id: string;
}

export type ApiControllerUpdateOrganizationResponse = controllers_Response;

export interface ApiControllerAddPaymentData {
    /**
     * The details of the payment
     */
    body: object_Payment;
}

export type ApiControllerAddPaymentResponse = controllers_Response;

export interface ApiControllerDeletePaymentData {
    /**
     * The details of the payment
     */
    body: object_Payment;
}

export type ApiControllerDeletePaymentResponse = controllers_Response;

export interface ApiControllerGetPaymentData {
    /**
     * The id ( owner/name ) of the payment
     */
    id: string;
}

export type ApiControllerGetPaymentResponse = object_Payment;

export interface ApiControllerGetPaymentsData {
    /**
     * The owner of payments
     */
    owner: string;
}

export type ApiControllerGetPaymentsResponse = object_Payment[];

export interface ApiControllerGetUserPaymentsData {
    /**
     * The organization of the user
     */
    organization: string;
    /**
     * The owner of payments
     */
    owner: string;
    /**
     * The username of the user
     */
    user: string;
}

export type ApiControllerGetUserPaymentsResponse = object_Payment[];

export interface ApiControllerInvoicePaymentData {
    /**
     * The id ( owner/name ) of the payment
     */
    id: string;
}

export type ApiControllerInvoicePaymentResponse = controllers_Response;

export interface ApiControllerNotifyPaymentData {
    /**
     * The details of the payment
     */
    body: object_Payment;
}

export type ApiControllerNotifyPaymentResponse = controllers_Response;

export interface ApiControllerUpdatePaymentData {
    /**
     * The details of the payment
     */
    body: object_Payment;
    /**
     * The id ( owner/name ) of the payment
     */
    id: string;
}

export type ApiControllerUpdatePaymentResponse = controllers_Response;

export interface ApiControllerAddPermissionData {
    /**
     * The details of the permission
     */
    body: object_Permission;
}

export type ApiControllerAddPermissionResponse = controllers_Response;

export interface ApiControllerDeletePermissionData {
    /**
     * The details of the permission
     */
    body: object_Permission;
}

export type ApiControllerDeletePermissionResponse = controllers_Response;

export interface ApiControllerGetPermissionData {
    /**
     * The id ( owner/name ) of the permission
     */
    id: string;
}

export type ApiControllerGetPermissionResponse = object_Permission;

export interface ApiControllerGetPermissionsData {
    /**
     * The owner of permissions
     */
    owner: string;
}

export type ApiControllerGetPermissionsResponse = object_Permission[];

export interface ApiControllerGetPermissionsByRoleData {
    /**
     * The id ( owner/name ) of the role
     */
    id: string;
}

export type ApiControllerGetPermissionsByRoleResponse = object_Permission[];

export type ApiControllerGetPermissionsBySubmitterResponse = object_Permission[];

export interface ApiControllerUpdatePermissionData {
    /**
     * The details of the permission
     */
    body: object_Permission;
    /**
     * The id ( owner/name ) of the permission
     */
    id: string;
}

export type ApiControllerUpdatePermissionResponse = controllers_Response;

export interface ApiControllerAddPlanData {
    /**
     * The details of the plan
     */
    body: object_Plan;
}

export type ApiControllerAddPlanResponse = controllers_Response;

export interface ApiControllerDeletePlanData {
    /**
     * The details of the plan
     */
    body: object_Plan;
}

export type ApiControllerDeletePlanResponse = controllers_Response;

export interface ApiControllerGetPlanData {
    /**
     * The id ( owner/name ) of the plan
     */
    id: string;
    /**
     * Should include plan's option
     */
    includeOption?: boolean;
}

export type ApiControllerGetPlanResponse = object_Plan;

export interface ApiControllerGetPlansData {
    /**
     * The owner of plans
     */
    owner: string;
}

export type ApiControllerGetPlansResponse = object_Plan[];

export interface ApiControllerUpdatePlanData {
    /**
     * The details of the plan
     */
    body: object_Plan;
    /**
     * The id ( owner/name ) of the plan
     */
    id: string;
}

export type ApiControllerUpdatePlanResponse = controllers_Response;

export interface ApiControllerAddPricingData {
    /**
     * The details of the pricing
     */
    body: object_Pricing;
}

export type ApiControllerAddPricingResponse = controllers_Response;

export interface ApiControllerDeletePricingData {
    /**
     * The details of the pricing
     */
    body: object_Pricing;
}

export type ApiControllerDeletePricingResponse = controllers_Response;

export interface ApiControllerGetPricingData {
    /**
     * The id ( owner/name ) of the pricing
     */
    id: string;
}

export type ApiControllerGetPricingResponse = object_Pricing;

export interface ApiControllerGetPricingsData {
    /**
     * The owner of pricings
     */
    owner: string;
}

export type ApiControllerGetPricingsResponse = object_Pricing[];

export interface ApiControllerUpdatePricingData {
    /**
     * The details of the pricing
     */
    body: object_Pricing;
    /**
     * The id ( owner/name ) of the pricing
     */
    id: string;
}

export type ApiControllerUpdatePricingResponse = controllers_Response;

export interface ApiControllerAddProductData {
    /**
     * The details of the product
     */
    body: object_Product;
}

export type ApiControllerAddProductResponse = controllers_Response;

export interface ApiControllerBuyProductData {
    /**
     * The id ( owner/name ) of the product
     */
    id: string;
    /**
     * The name of the provider
     */
    providerName: string;
}

export type ApiControllerBuyProductResponse = controllers_Response;

export interface ApiControllerDeleteProductData {
    /**
     * The details of the product
     */
    body: object_Product;
}

export type ApiControllerDeleteProductResponse = controllers_Response;

export interface ApiControllerGetProductData {
    /**
     * The id ( owner/name ) of the product
     */
    id: string;
}

export type ApiControllerGetProductResponse = object_Product;

export interface ApiControllerGetProductsData {
    /**
     * The owner of products
     */
    owner: string;
}

export type ApiControllerGetProductsResponse = object_Product[];

export interface ApiControllerUpdateProductData {
    /**
     * The details of the product
     */
    body: object_Product;
    /**
     * The id ( owner/name ) of the product
     */
    id: string;
}

export type ApiControllerUpdateProductResponse = controllers_Response;

export interface ApiControllerAddProviderData {
    /**
     * The details of the provider
     */
    body: object_Provider;
}

export type ApiControllerAddProviderResponse = controllers_Response;

export interface ApiControllerDeleteProviderData {
    /**
     * The details of the provider
     */
    body: object_Provider;
}

export type ApiControllerDeleteProviderResponse = controllers_Response;

export type ApiControllerGetGlobalProvidersResponse = object_Provider[];

export interface ApiControllerGetProviderData {
    /**
     * The id ( owner/name ) of the provider
     */
    id: string;
}

export type ApiControllerGetProviderResponse = object_Provider;

export interface ApiControllerGetProvidersData {
    /**
     * The owner of providers
     */
    owner: string;
}

export type ApiControllerGetProvidersResponse = object_Provider[];

export interface ApiControllerUpdateProviderData {
    /**
     * The details of the provider
     */
    body: object_Provider;
    /**
     * The id ( owner/name ) of the provider
     */
    id: string;
}

export type ApiControllerUpdateProviderResponse = controllers_Response;

export interface ApiControllerAddResourceData {
    /**
     * Resource object
     */
    resource: object_Resource;
}

export type ApiControllerAddResourceResponse = controllers_Response;

export interface ApiControllerDeleteResourceData {
    /**
     * Resource object
     */
    resource: object_Resource;
}

export type ApiControllerDeleteResourceResponse = controllers_Response;

export interface ApiControllerGetResourceData {
    /**
     * The id ( owner/name ) of resource
     */
    id: string;
}

export type ApiControllerGetResourceResponse = object_Resource;

export interface ApiControllerGetResourcesData {
    /**
     * Field
     */
    field?: string;
    /**
     * Owner
     */
    owner: string;
    /**
     * Page Number
     */
    p?: number;
    /**
     * Page Size
     */
    pageSize?: number;
    /**
     * Sort Field
     */
    sortField?: string;
    /**
     * Sort Order
     */
    sortOrder?: string;
    /**
     * User
     */
    user: string;
    /**
     * Value
     */
    value?: string;
}

export type ApiControllerGetResourcesResponse = object_Resource[];

export interface ApiControllerUpdateResourceData {
    /**
     * The id ( owner/name ) of resource
     */
    id: string;
    /**
     * The resource object
     */
    resource: object_Resource;
}

export type ApiControllerUpdateResourceResponse = controllers_Response;

export interface ApiControllerUploadResourceData {
    /**
     * Application
     */
    application: string;
    /**
     * Created Time
     */
    createdTime?: string;
    /**
     * Description
     */
    description?: string;
    /**
     * Resource file
     */
    file: (Blob | File);
    /**
     * Full File Path
     */
    fullFilePath: string;
    /**
     * Owner
     */
    owner: string;
    /**
     * Parent
     */
    parent?: string;
    /**
     * Tag
     */
    tag?: string;
    /**
     * User
     */
    user: string;
}

export type ApiControllerUploadResourceResponse = object_Resource;

export interface ApiControllerAddRoleData {
    /**
     * The details of the role
     */
    body: object_Role;
}

export type ApiControllerAddRoleResponse = controllers_Response;

export interface ApiControllerDeleteRoleData {
    /**
     * The details of the role
     */
    body: object_Role;
}

export type ApiControllerDeleteRoleResponse = controllers_Response;

export interface ApiControllerGetRoleData {
    /**
     * The id ( owner/name ) of the role
     */
    id: string;
}

export type ApiControllerGetRoleResponse = object_Role;

export interface ApiControllerGetRolesData {
    /**
     * The owner of roles
     */
    owner: string;
}

export type ApiControllerGetRolesResponse = object_Role[];

export interface ApiControllerUpdateRoleData {
    /**
     * The details of the role
     */
    body: object_Role;
    /**
     * The id ( owner/name ) of the role
     */
    id: string;
}

export type ApiControllerUpdateRoleResponse = controllers_Response;

export interface ApiControllerAddSessionData {
    /**
     * The id(organization/application/user) of session
     */
    id: string;
    /**
     * sessionId to be added
     */
    sessionId: string;
}

export type ApiControllerAddSessionResponse = string[];

export interface ApiControllerDeleteSessionData {
    /**
     * The id(organization/application/user) of session
     */
    id: string;
}

export type ApiControllerDeleteSessionResponse = string[];

export interface ApiControllerGetSingleSessionData {
    /**
     * The id(organization/application/user) of session
     */
    id: string;
}

export type ApiControllerGetSingleSessionResponse = string[];

export interface ApiControllerGetSessionsData {
    /**
     * The organization name
     */
    owner: string;
}

export type ApiControllerGetSessionsResponse = string[];

export interface ApiControllerIsSessionDuplicatedData {
    /**
     * The id(organization/application/user) of session
     */
    id: string;
    /**
     * sessionId to be checked
     */
    sessionId: string;
}

export type ApiControllerIsSessionDuplicatedResponse = string[];

export interface ApiControllerUpdateSessionData {
    /**
     * The id(organization/application/user) of session
     */
    id: string;
}

export type ApiControllerUpdateSessionResponse = string[];

export interface ApiControllerAddSubscriptionData {
    /**
     * The details of the subscription
     */
    body: object_Subscription;
}

export type ApiControllerAddSubscriptionResponse = controllers_Response;

export interface ApiControllerDeleteSubscriptionData {
    /**
     * The details of the subscription
     */
    body: object_Subscription;
}

export type ApiControllerDeleteSubscriptionResponse = controllers_Response;

export interface ApiControllerGetSubscriptionData {
    /**
     * The id ( owner/name ) of the subscription
     */
    id: string;
}

export type ApiControllerGetSubscriptionResponse = object_Subscription;

export interface ApiControllerGetSubscriptionsData {
    /**
     * The owner of subscriptions
     */
    owner: string;
}

export type ApiControllerGetSubscriptionsResponse = object_Subscription[];

export interface ApiControllerUpdateSubscriptionData {
    /**
     * The details of the subscription
     */
    body: object_Subscription;
    /**
     * The id ( owner/name ) of the subscription
     */
    id: string;
}

export type ApiControllerUpdateSubscriptionResponse = controllers_Response;

export interface ApiControllerAddSyncerData {
    /**
     * The details of the syncer
     */
    body: object_Syncer;
}

export type ApiControllerAddSyncerResponse = controllers_Response;

export interface ApiControllerDeleteSyncerData {
    /**
     * The details of the syncer
     */
    body: object_Syncer;
}

export type ApiControllerDeleteSyncerResponse = controllers_Response;

export interface ApiControllerGetSyncerData {
    /**
     * The id ( owner/name ) of the syncer
     */
    id: string;
}

export type ApiControllerGetSyncerResponse = object_Syncer;

export interface ApiControllerGetSyncersData {
    /**
     * The owner of syncers
     */
    owner: string;
}

export type ApiControllerGetSyncersResponse = object_Syncer[];

export interface ApiControllerRunSyncerData {
    /**
     * The details of the syncer
     */
    body: object_Syncer;
}

export type ApiControllerRunSyncerResponse = controllers_Response;

export interface ApiControllerUpdateSyncerData {
    /**
     * The details of the syncer
     */
    body: object_Syncer;
    /**
     * The id ( owner/name ) of the syncer
     */
    id: string;
}

export type ApiControllerUpdateSyncerResponse = controllers_Response;

export interface ApiControllerAddTokenData {
    /**
     * Details of the token
     */
    body: object_Token;
}

export type ApiControllerAddTokenResponse = controllers_Response;

export interface ApiControllerDeleteTokenData {
    /**
     * Details of the token
     */
    body: object_Token;
}

export type ApiControllerDeleteTokenResponse = controllers_Response;

export interface ApiControllerGetCaptchaStatusData {
    /**
     * The id ( owner/name ) of user
     */
    id: string;
}

export type ApiControllerGetCaptchaStatusResponse = controllers_Response;

export interface ApiControllerGetTokenData {
    /**
     * The id ( owner/name ) of token
     */
    id: string;
}

export type ApiControllerGetTokenResponse = object_Token;

export interface ApiControllerGetTokensData {
    /**
     * The owner of tokens
     */
    owner: string;
    /**
     * The number of the page
     */
    p: string;
    /**
     * The size of each page
     */
    pageSize: string;
}

export type ApiControllerGetTokensResponse = object_Token[];

export interface ApiControllerGetOauthTokenData {
    /**
     * OAuth client id
     */
    clientId: string;
    /**
     * OAuth client secret
     */
    clientSecret: string;
    /**
     * OAuth code
     */
    code: string;
    /**
     * OAuth grant type
     */
    grantType: string;
}

export type ApiControllerGetOauthTokenResponse = object_TokenWrapper;

export interface ApiControllerRefreshTokenData {
    /**
     * OAuth client id
     */
    clientId: string;
    /**
     * OAuth client secret
     */
    clientSecret?: string;
    /**
     * OAuth grant type
     */
    grantType: string;
    /**
     * OAuth refresh token
     */
    refreshToken: string;
    /**
     * OAuth scope
     */
    scope: string;
}

export type ApiControllerRefreshTokenResponse = object_TokenWrapper;

export interface ApiControllerUpdateTokenData {
    /**
     * Details of the token
     */
    body: object_Token;
    /**
     * The id ( owner/name ) of token
     */
    id: string;
}

export type ApiControllerUpdateTokenResponse = controllers_Response;

export interface ApiControllerAddUserData {
    /**
     * The details of the user
     */
    body: object_User;
}

export type ApiControllerAddUserResponse = controllers_Response;

export type ApiControllerAddUserKeysResponse = object_Userinfo;

export type ApiControllerCheckUserPasswordResponse = object_Userinfo;

export interface ApiControllerDeleteUserData {
    /**
     * The details of the user
     */
    body: object_User;
}

export type ApiControllerDeleteUserResponse = controllers_Response;

export interface ApiControllerGetEmailAndPhoneData {
    /**
     * The organization of the user
     */
    organization: string;
    /**
     * The username of the user
     */
    username: string;
}

export type ApiControllerGetEmailAndPhoneResponse = controllers_Response;

export type ApiControllerGetGlobalUsersResponse = object_User[];

export interface ApiControllerGetSortedUsersData {
    /**
     * The count of users to return, e.g., 25
     */
    limit: string;
    /**
     * The owner of users
     */
    owner: string;
    /**
     * The DB column name to sort by, e.g., created_time
     */
    sorter: string;
}

export type ApiControllerGetSortedUsersResponse = object_User[];

export interface ApiControllerGetUserData {
    /**
     * The email of the user
     */
    email?: string;
    /**
     * The id ( owner/name ) of the user
     */
    id?: string;
    /**
     * The owner of the user
     */
    owner?: string;
    /**
     * The phone of the user
     */
    phone?: string;
    /**
     * The userId of the user
     */
    userId?: string;
}

export type ApiControllerGetUserResponse = object_User;

export interface ApiControllerGetUserCountData {
    /**
     * The filter for query, 1 for online, 0 for offline, empty string for all users
     */
    isOnline: string;
    /**
     * The owner of users
     */
    owner: string;
}

export type ApiControllerGetUserCountResponse = unknown;

export interface ApiControllerGetUsersData {
    /**
     * The owner of users
     */
    owner: string;
}

export type ApiControllerGetUsersResponse = object_User[];

export interface ApiControllerUpdateUserData {
    /**
     * The details of the user
     */
    body: object_User;
    /**
     * The id ( owner/name ) of the user
     */
    id: string;
}

export type ApiControllerUpdateUserResponse = controllers_Response;

export type ApiControllerWebAuthnSignupBeginResponse = protocol_CredentialCreation;

export interface ApiControllerWebAuthnSignupFinishData {
    /**
     * authenticator attestation Response
     */
    body: protocol_CredentialCreationResponse;
}

export type ApiControllerWebAuthnSignupFinishResponse = controllers_Response;

export interface ApiControllerAddWebhookData {
    /**
     * The details of the webhook
     */
    body: object_Webhook;
}

export type ApiControllerAddWebhookResponse = controllers_Response;

export interface ApiControllerDeleteWebhookData {
    /**
     * The details of the webhook
     */
    body: object_Webhook;
}

export type ApiControllerDeleteWebhookResponse = controllers_Response;

export interface ApiControllerGetWebhookData {
    /**
     * The id ( owner/name ) of the webhook
     */
    id: string;
}

export type ApiControllerGetWebhookResponse = object_Webhook;

export interface ApiControllerGetWebhooksData {
    /**
     * The owner of webhooks
     */
    owner: string;
}

export type ApiControllerGetWebhooksResponse = object_Webhook[];

export interface ApiControllerUpdateWebhookData {
    /**
     * The details of the webhook
     */
    body: object_Webhook;
    /**
     * The id ( owner/name ) of the webhook
     */
    id: string;
}

export type ApiControllerUpdateWebhookResponse = controllers_Response;

export type ApiControllerDeleteMfaResponse = controllers_Response;

export type ApiControllerMfaSetupEnableResponse = controllers_Response;

export type ApiControllerMfaSetupInitiateResponse = controllers_Response;

export type ApiControllerMfaSetupVerifyResponse = controllers_Response;

export type ApiControllerSetPreferredMfaResponse = controllers_Response;

export interface ApiControllerGetApplicationLoginData {
    /**
     * client id
     */
    clientId: string;
    /**
     * redirect uri
     */
    redirectUri: string;
    /**
     * response type
     */
    responseType: string;
    /**
     * scope
     */
    scope: string;
    /**
     * state
     */
    state: string;
}

export type ApiControllerGetApplicationLoginResponse = controllers_Response;

export type ApiControllerGetCaptchaResponse = object_Userinfo;

export interface ApiControllerLoginData {
    /**
     * clientId
     */
    clientId: string;
    /**
     * code_challenge
     */
    codeChallenge?: string;
    /**
     * code_challenge_method
     */
    codeChallengeMethod?: string;
    /**
     * Login information
     */
    form: controllers_AuthForm;
    /**
     * nonce
     */
    nonce?: string;
    /**
     * redirectUri
     */
    redirectUri: string;
    /**
     * responseType
     */
    responseType: string;
    /**
     * scope
     */
    scope?: string;
    /**
     * state
     */
    state?: string;
}

export type ApiControllerLoginResponse = controllers_Response;

export interface ApiControllerIntrospectTokenData {
    /**
     * access_token's value or refresh_token's value
     */
    token: string;
    /**
     * the token type access_token or refresh_token
     */
    tokenTypeHint: string;
}

export type ApiControllerIntrospectTokenResponse = object_IntrospectionResponse;

export interface ApiControllerLogoutData {
    /**
     * id_token_hint
     */
    idTokenHint?: string;
    /**
     * post_logout_redirect_uri
     */
    postLogoutRedirectUri?: string;
    /**
     * state
     */
    state?: string;
}

export type ApiControllerLogoutResponse = controllers_Response;

export interface ApiControllerSignupData {
    /**
     * The password
     */
    password: string;
    /**
     * The username to sign up
     */
    username: string;
}

export type ApiControllerSignupResponse = controllers_Response;

export type ApiControllerUnlinkResponse = object_Userinfo;

export interface ApiControllerWebAuthnSigninBeginData {
    /**
     * name
     */
    name: string;
    /**
     * owner
     */
    owner: string;
}

export type ApiControllerWebAuthnSigninBeginResponse = protocol_CredentialAssertion;

export interface ApiControllerWebAuthnSigninFinishData {
    /**
     * authenticator assertion Response
     */
    body: protocol_CredentialAssertionResponse;
}

export type ApiControllerWebAuthnSigninFinishResponse = controllers_Response;

export type ApiControllerGetDashboardResponse = controllers_Response;

export type ApiControllerGetPrometheusInfoResponse = object_PrometheusInfo;

export type ApiControllerGetSystemInfoResponse = util_SystemInfo;

export type ApiControllerGetVersionInfoResponse = util_VersionInfo;

export type ApiControllerGetWebhookEventTypeResponse = object_Userinfo;

export type ApiControllerHealthResponse = controllers_Response;

export type ApiControllerHandleOfficialAccountEventResponse = object_Userinfo;

export interface ApiControllerSendEmailData {
    /**
     * The clientId of the application
     */
    clientId: string;
    /**
     * The clientSecret of the application
     */
    clientSecret: string;
    /**
     * Details of the email request
     */
    from: controllers_EmailForm;
}

export type ApiControllerSendEmailResponse = controllers_Response;

export interface ApiControllerSendNotificationData {
    /**
     * Details of the notification request
     */
    from: controllers_NotificationForm;
}

export type ApiControllerSendNotificationResponse = controllers_Response;

export interface ApiControllerSendSmsData {
    /**
     * The clientId of the application
     */
    clientId: string;
    /**
     * The clientSecret of the application
     */
    clientSecret: string;
    /**
     * Details of the sms request
     */
    from: controllers_SmsForm;
}

export type ApiControllerSendSmsResponse = controllers_Response;

export type ApiControllerSendVerificationCodeResponse = object_Userinfo;

export type ApiControllerVerifyCaptchaResponse = object_Userinfo;

export type ApiControllerVerifyCodeResponse = object_Userinfo;

export interface $OpenApiTs {
    '/.well-known/jwks': {
        get: {
            res: {
                200: jose_JSONWebKey;
            };
        };
    };
    '/.well-known/openid-configuration': {
        get: {
            res: {
                200: object_OidcDiscovery;
            };
        };
    };
    '/api/Callback': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Userinfo;
            };
        };
    };
    '/api/add-adapter': {
        post: {
            req: ApiControllerAddAdapterData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-adapter': {
        post: {
            req: ApiControllerDeleteAdapterData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-adapter': {
        get: {
            req: ApiControllerGetAdapterData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Adapter;
            };
        };
    };
    '/api/get-adapters': {
        get: {
            req: ApiControllerGetAdaptersData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Adapter[];
            };
        };
    };
    '/api/update-adapter': {
        post: {
            req: ApiControllerUpdateAdapterData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-application': {
        post: {
            req: ApiControllerAddApplicationData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-application': {
        post: {
            req: ApiControllerDeleteApplicationData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-application': {
        get: {
            req: ApiControllerGetApplicationData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Application;
            };
        };
    };
    '/api/get-applications': {
        get: {
            req: ApiControllerGetApplicationsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Application[];
            };
        };
    };
    '/api/get-organization-applications': {
        get: {
            req: ApiControllerGetOrganizationApplicationsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Application[];
            };
        };
    };
    '/api/get-user-application': {
        get: {
            req: ApiControllerGetUserApplicationData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Application;
            };
        };
    };
    '/api/update-application': {
        post: {
            req: ApiControllerUpdateApplicationData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-cert': {
        post: {
            req: ApiControllerAddCertData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-cert': {
        post: {
            req: ApiControllerDeleteCertData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-cert': {
        get: {
            req: ApiControllerGetCertData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Cert;
            };
        };
    };
    '/api/get-certs': {
        get: {
            req: ApiControllerGetCertsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Cert[];
            };
        };
    };
    '/api/get-global-certs': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Cert[];
            };
        };
    };
    '/api/update-cert': {
        post: {
            req: ApiControllerUpdateCertData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-enforcer': {
        post: {
            req: ApiControllerAddEnforcerData;
            res: {
                200: object_Enforcer;
            };
        };
    };
    '/api/batch-enforce': {
        post: {
            req: ApiControllerBatchEnforceData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-enforcer': {
        post: {
            req: ApiControllerDeleteEnforcerData;
            res: {
                200: object_Enforcer;
            };
        };
    };
    '/api/enforce': {
        post: {
            req: ApiControllerEnforceData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-enforcer': {
        get: {
            req: ApiControllerGetEnforcerData;
            res: {
                200: object_Enforcer;
            };
        };
    };
    '/api/get-enforcers': {
        get: {
            req: ApiControllerGetEnforcersData;
            res: {
                200: object_Enforcer[];
            };
        };
    };
    '/api/update-enforcer': {
        post: {
            req: ApiControllerUpdateEnforcerData;
            res: {
                200: object_Enforcer;
            };
        };
    };
    '/api/add-group': {
        post: {
            req: ApiControllerAddGroupData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-group': {
        post: {
            req: ApiControllerDeleteGroupData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-group': {
        get: {
            req: ApiControllerGetGroupData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Group;
            };
        };
    };
    '/api/get-groups': {
        get: {
            req: ApiControllerGetGroupsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Group[];
            };
        };
    };
    '/api/update-group': {
        post: {
            req: ApiControllerUpdateGroupData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-invitation': {
        post: {
            req: ApiControllerAddInvitationData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-invitation': {
        post: {
            req: ApiControllerDeleteInvitationData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-invitation': {
        get: {
            req: ApiControllerGetInvitationData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Invitation;
            };
        };
    };
    '/api/get-invitations': {
        get: {
            req: ApiControllerGetInvitationsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Invitation[];
            };
        };
    };
    '/api/update-invitation': {
        post: {
            req: ApiControllerUpdateInvitationData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/verify-invitation': {
        get: {
            req: ApiControllerVerifyInvitationData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-ldap': {
        post: {
            req: ApiControllerAddLdapData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-ldap': {
        post: {
            req: ApiControllerDeleteLdapData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-account': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-ldap': {
        get: {
            req: ApiControllerGetLdapData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Ldap;
            };
        };
    };
    '/api/get-ldap-users': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: controllers_LdapResp;
            };
        };
    };
    '/api/get-ldaps': {
        get: {
            req: ApiControllerGetLdapsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Ldap[];
            };
        };
    };
    '/api/reset-email-or-phone': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Userinfo;
            };
        };
    };
    '/api/set-password': {
        post: {
            req: ApiControllerSetPasswordData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/sync-ldap-users': {
        post: {
            req: ApiControllerSyncLdapUsersData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_LdapSyncResp;
            };
        };
    };
    '/api/update-ldap': {
        post: {
            req: ApiControllerUpdateLdapData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/user': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: controllers_LaravelResponse;
            };
        };
    };
    '/api/userinfo': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Userinfo;
            };
        };
    };
    '/api/add-model': {
        post: {
            req: ApiControllerAddModelData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-model': {
        post: {
            req: ApiControllerDeleteModelData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-model': {
        get: {
            req: ApiControllerGetModelData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Model;
            };
        };
    };
    '/api/get-models': {
        get: {
            req: ApiControllerGetModelsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Model[];
            };
        };
    };
    '/api/update-model': {
        post: {
            req: ApiControllerUpdateModelData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-organization': {
        post: {
            req: ApiControllerAddOrganizationData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-organization': {
        post: {
            req: ApiControllerDeleteOrganizationData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-default-application': {
        get: {
            req: ApiControllerGetDefaultApplicationData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-organization': {
        get: {
            req: ApiControllerGetOrganizationData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Organization;
            };
        };
    };
    '/api/get-organization-names': {
        get: {
            req: ApiControllerGetOrganizationNamesData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Organization[];
            };
        };
    };
    '/api/get-organizations': {
        get: {
            req: ApiControllerGetOrganizationsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Organization[];
            };
        };
    };
    '/api/update-organization': {
        post: {
            req: ApiControllerUpdateOrganizationData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-payment': {
        post: {
            req: ApiControllerAddPaymentData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-payment': {
        post: {
            req: ApiControllerDeletePaymentData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-payment': {
        get: {
            req: ApiControllerGetPaymentData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Payment;
            };
        };
    };
    '/api/get-payments': {
        get: {
            req: ApiControllerGetPaymentsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Payment[];
            };
        };
    };
    '/api/get-user-payments': {
        get: {
            req: ApiControllerGetUserPaymentsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Payment[];
            };
        };
    };
    '/api/invoice-payment': {
        post: {
            req: ApiControllerInvoicePaymentData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/notify-payment': {
        post: {
            req: ApiControllerNotifyPaymentData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/update-payment': {
        post: {
            req: ApiControllerUpdatePaymentData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-permission': {
        post: {
            req: ApiControllerAddPermissionData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-permission': {
        post: {
            req: ApiControllerDeletePermissionData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-permission': {
        get: {
            req: ApiControllerGetPermissionData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Permission;
            };
        };
    };
    '/api/get-permissions': {
        get: {
            req: ApiControllerGetPermissionsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Permission[];
            };
        };
    };
    '/api/get-permissions-by-role': {
        get: {
            req: ApiControllerGetPermissionsByRoleData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Permission[];
            };
        };
    };
    '/api/get-permissions-by-submitter': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Permission[];
            };
        };
    };
    '/api/update-permission': {
        post: {
            req: ApiControllerUpdatePermissionData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-plan': {
        post: {
            req: ApiControllerAddPlanData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-plan': {
        post: {
            req: ApiControllerDeletePlanData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-plan': {
        get: {
            req: ApiControllerGetPlanData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Plan;
            };
        };
    };
    '/api/get-plans': {
        get: {
            req: ApiControllerGetPlansData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Plan[];
            };
        };
    };
    '/api/update-plan': {
        post: {
            req: ApiControllerUpdatePlanData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-pricing': {
        post: {
            req: ApiControllerAddPricingData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-pricing': {
        post: {
            req: ApiControllerDeletePricingData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-pricing': {
        get: {
            req: ApiControllerGetPricingData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Pricing;
            };
        };
    };
    '/api/get-pricings': {
        get: {
            req: ApiControllerGetPricingsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Pricing[];
            };
        };
    };
    '/api/update-pricing': {
        post: {
            req: ApiControllerUpdatePricingData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-product': {
        post: {
            req: ApiControllerAddProductData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/buy-product': {
        post: {
            req: ApiControllerBuyProductData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-product': {
        post: {
            req: ApiControllerDeleteProductData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-product': {
        get: {
            req: ApiControllerGetProductData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Product;
            };
        };
    };
    '/api/get-products': {
        get: {
            req: ApiControllerGetProductsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Product[];
            };
        };
    };
    '/api/update-product': {
        post: {
            req: ApiControllerUpdateProductData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-provider': {
        post: {
            req: ApiControllerAddProviderData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-provider': {
        post: {
            req: ApiControllerDeleteProviderData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-global-providers': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Provider[];
            };
        };
    };
    '/api/get-provider': {
        get: {
            req: ApiControllerGetProviderData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Provider;
            };
        };
    };
    '/api/get-providers': {
        get: {
            req: ApiControllerGetProvidersData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Provider[];
            };
        };
    };
    '/api/update-provider': {
        post: {
            req: ApiControllerUpdateProviderData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-resource': {
        post: {
            req: ApiControllerAddResourceData;
            res: {
                /**
                 * Success or error
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-resource': {
        post: {
            req: ApiControllerDeleteResourceData;
            res: {
                /**
                 * Success or error
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-resource': {
        get: {
            req: ApiControllerGetResourceData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Resource;
            };
        };
    };
    '/api/get-resources': {
        get: {
            req: ApiControllerGetResourcesData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Resource[];
            };
        };
    };
    '/api/update-resource': {
        post: {
            req: ApiControllerUpdateResourceData;
            res: {
                /**
                 * Success or error
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/upload-resource': {
        post: {
            req: ApiControllerUploadResourceData;
            res: {
                /**
                 * FileUrl, objectKey
                 */
                200: object_Resource;
            };
        };
    };
    '/api/add-role': {
        post: {
            req: ApiControllerAddRoleData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-role': {
        post: {
            req: ApiControllerDeleteRoleData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-role': {
        get: {
            req: ApiControllerGetRoleData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Role;
            };
        };
    };
    '/api/get-roles': {
        get: {
            req: ApiControllerGetRolesData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Role[];
            };
        };
    };
    '/api/update-role': {
        post: {
            req: ApiControllerUpdateRoleData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-session': {
        post: {
            req: ApiControllerAddSessionData;
            res: {
                /**
                 * The Response object
                 */
                200: string[];
            };
        };
    };
    '/api/delete-session': {
        post: {
            req: ApiControllerDeleteSessionData;
            res: {
                /**
                 * The Response object
                 */
                200: string[];
            };
        };
    };
    '/api/get-session': {
        get: {
            req: ApiControllerGetSingleSessionData;
            res: {
                /**
                 * The Response object
                 */
                200: string[];
            };
        };
    };
    '/api/get-sessions': {
        get: {
            req: ApiControllerGetSessionsData;
            res: {
                /**
                 * The Response object
                 */
                200: string[];
            };
        };
    };
    '/api/is-session-duplicated': {
        get: {
            req: ApiControllerIsSessionDuplicatedData;
            res: {
                /**
                 * The Response object
                 */
                200: string[];
            };
        };
    };
    '/api/update-session': {
        post: {
            req: ApiControllerUpdateSessionData;
            res: {
                /**
                 * The Response object
                 */
                200: string[];
            };
        };
    };
    '/api/add-subscription': {
        post: {
            req: ApiControllerAddSubscriptionData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-subscription': {
        post: {
            req: ApiControllerDeleteSubscriptionData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-subscription': {
        get: {
            req: ApiControllerGetSubscriptionData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Subscription;
            };
        };
    };
    '/api/get-subscriptions': {
        get: {
            req: ApiControllerGetSubscriptionsData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Subscription[];
            };
        };
    };
    '/api/update-subscription': {
        post: {
            req: ApiControllerUpdateSubscriptionData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-syncer': {
        post: {
            req: ApiControllerAddSyncerData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-syncer': {
        post: {
            req: ApiControllerDeleteSyncerData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-syncer': {
        get: {
            req: ApiControllerGetSyncerData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Syncer;
            };
        };
    };
    '/api/get-syncers': {
        get: {
            req: ApiControllerGetSyncersData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Syncer[];
            };
        };
    };
    '/api/run-syncer': {
        get: {
            req: ApiControllerRunSyncerData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/update-syncer': {
        post: {
            req: ApiControllerUpdateSyncerData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-token': {
        post: {
            req: ApiControllerAddTokenData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-token': {
        post: {
            req: ApiControllerDeleteTokenData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-captcha-status': {
        get: {
            req: ApiControllerGetCaptchaStatusData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-token': {
        get: {
            req: ApiControllerGetTokenData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Token;
            };
        };
    };
    '/api/get-tokens': {
        get: {
            req: ApiControllerGetTokensData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Token[];
            };
        };
    };
    '/api/login/oauth/access_token': {
        post: {
            req: ApiControllerGetOauthTokenData;
            res: {
                /**
                 * The Response object
                 */
                200: object_TokenWrapper;
                /**
                 * The Response object
                 */
                400: object_TokenError;
                /**
                 * The Response object
                 */
                401: object_TokenError;
            };
        };
    };
    '/api/login/oauth/refresh_token': {
        post: {
            req: ApiControllerRefreshTokenData;
            res: {
                /**
                 * The Response object
                 */
                200: object_TokenWrapper;
                /**
                 * The Response object
                 */
                400: object_TokenError;
                /**
                 * The Response object
                 */
                401: object_TokenError;
            };
        };
    };
    '/api/update-token': {
        post: {
            req: ApiControllerUpdateTokenData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-user': {
        post: {
            req: ApiControllerAddUserData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-user-keys': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Userinfo;
            };
        };
    };
    '/api/check-user-password': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Userinfo;
            };
        };
    };
    '/api/delete-user': {
        post: {
            req: ApiControllerDeleteUserData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-email-and-phone': {
        get: {
            req: ApiControllerGetEmailAndPhoneData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-global-users': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: object_User[];
            };
        };
    };
    '/api/get-sorted-users': {
        get: {
            req: ApiControllerGetSortedUsersData;
            res: {
                /**
                 * The Response object
                 */
                200: object_User[];
            };
        };
    };
    '/api/get-user': {
        get: {
            req: ApiControllerGetUserData;
            res: {
                /**
                 * The Response object
                 */
                200: object_User;
            };
        };
    };
    '/api/get-user-count': {
        get: {
            req: ApiControllerGetUserCountData;
            res: {
                /**
                 * {int} int The count of filtered users for an organization
                 */
                200: unknown;
            };
        };
    };
    '/api/get-users': {
        get: {
            req: ApiControllerGetUsersData;
            res: {
                /**
                 * The Response object
                 */
                200: object_User[];
            };
        };
    };
    '/api/update-user': {
        post: {
            req: ApiControllerUpdateUserData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/webauthn/signup/begin': {
        get: {
            res: {
                /**
                 * The CredentialCreationOptions object
                 */
                200: protocol_CredentialCreation;
            };
        };
    };
    '/api/webauthn/signup/finish': {
        post: {
            req: ApiControllerWebAuthnSignupFinishData;
            res: {
                /**
                 * "The Response object"
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/add-webhook': {
        post: {
            req: ApiControllerAddWebhookData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-webhook': {
        post: {
            req: ApiControllerDeleteWebhookData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-webhook': {
        get: {
            req: ApiControllerGetWebhookData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Webhook;
            };
        };
    };
    '/api/get-webhooks': {
        get: {
            req: ApiControllerGetWebhooksData;
            res: {
                /**
                 * The Response object
                 */
                200: object_Webhook[];
            };
        };
    };
    '/api/update-webhook': {
        post: {
            req: ApiControllerUpdateWebhookData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/delete-mfa/': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/mfa/setup/enable': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/mfa/setup/initiate': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/mfa/setup/verify': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/set-preferred-mfa': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-app-login': {
        get: {
            req: ApiControllerGetApplicationLoginData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-captcha': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Userinfo;
            };
        };
    };
    '/api/login': {
        post: {
            req: ApiControllerLoginData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/login/oauth/introspect': {
        post: {
            req: ApiControllerIntrospectTokenData;
            res: {
                /**
                 * The Response object
                 */
                200: object_IntrospectionResponse;
                /**
                 * The Response object
                 */
                400: object_TokenError;
                /**
                 * The Response object
                 */
                401: object_TokenError;
            };
        };
    };
    '/api/logout': {
        post: {
            req: ApiControllerLogoutData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/signup': {
        post: {
            req: ApiControllerSignupData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/unlink': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Userinfo;
            };
        };
    };
    '/api/webauthn/signin/begin': {
        get: {
            req: ApiControllerWebAuthnSigninBeginData;
            res: {
                /**
                 * The CredentialAssertion object
                 */
                200: protocol_CredentialAssertion;
            };
        };
    };
    '/api/webauthn/signin/finish': {
        post: {
            req: ApiControllerWebAuthnSigninFinishData;
            res: {
                /**
                 * "The Response object"
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-dashboard': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/get-prometheus-info': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: object_PrometheusInfo;
            };
        };
    };
    '/api/get-system-info': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: util_SystemInfo;
            };
        };
    };
    '/api/get-version-info': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: util_VersionInfo;
            };
        };
    };
    '/api/get-webhook-event': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Userinfo;
            };
        };
    };
    '/api/health': {
        get: {
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/webhook': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Userinfo;
            };
        };
    };
    '/api/send-email': {
        post: {
            req: ApiControllerSendEmailData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/send-notification': {
        post: {
            req: ApiControllerSendNotificationData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/send-sms': {
        post: {
            req: ApiControllerSendSmsData;
            res: {
                /**
                 * The Response object
                 */
                200: controllers_Response;
            };
        };
    };
    '/api/send-verification-code': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Userinfo;
            };
        };
    };
    '/api/verify-captcha': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Userinfo;
            };
        };
    };
    '/api/verify-code': {
        post: {
            res: {
                /**
                 * The Response object
                 */
                200: object_Userinfo;
            };
        };
    };
}
